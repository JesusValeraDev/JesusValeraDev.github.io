<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en">
	<title>Jesus Valera Reales - Testing</title>
	<subtitle>Personal blog about technology, mostly about programming languages; time to time I like to share what I learn</subtitle>
	<link href="https://jesusvalera.dev/tags/testing/atom.xml" rel="self" type="application/atom+xml"/>
  <link href="https://jesusvalera.dev"/>
	<generator uri="https://www.getzola.org/">Zola</generator>
	<updated>2024-06-01T00:00:00+00:00</updated>
	<id>https://jesusvalera.dev/tags/testing/atom.xml</id>
	<entry xml:lang="en">
		<title>The importance of tests in our software</title>
		<published>2024-06-01T00:00:00+00:00</published>
		<updated>2024-06-01T00:00:00+00:00</updated>
		<link rel="alternate" href="https://jesusvalera.dev/the-importance-of-tests-in-our-software/" type="text/html"/>
		<id>https://jesusvalera.dev/the-importance-of-tests-in-our-software/</id>
		<content type="html">&lt;p&gt;Writing tests during software development consists of checking that every part of the program you are writing works as expected.&lt;&#x2F;p&gt;
&lt;img src=&quot;&#x2F;images&#x2F;2024-06-01&#x2F;1.png&quot; alt=&quot;programming comic joke&quot;&gt;
&lt;p&gt;Here are a few reasons why tests are so important:&lt;&#x2F;p&gt;
&lt;h3 id=&quot;white-check-mark-ensuring-correctness&quot;&gt;‚úÖ Ensuring Correctness&lt;&#x2F;h3&gt;
&lt;p&gt;When you&#x27;re building something, you want it to work correctly. Tests help ensure that your &lt;strong&gt;software behaves the way
it&#x27;s supposed to under different conditions&lt;&#x2F;strong&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Let&#x27;s say you&#x27;re creating a weather app. You want to make sure that when users enter their location, they receive
accurate weather information. By writing tests, you can verify that the app displays the right forecast for various
locations and weather conditions.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;beetle-detecting-bugs-early&quot;&gt;üêû Detecting Bugs Early&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;strong&gt;Writing tests helps catch these bugs early&lt;&#x2F;strong&gt; in the development process, the longer they persist, the harder&#x2F;expensive they are.&lt;&#x2F;p&gt;
&lt;p&gt;For example, imagine you&#x27;re developing a game, and you want to make sure that when the player collects a coin, their
score increases. Writing a test for this ensures that every time a coin is collected, the score goes up as expected.
If the test fails, you know something went wrong, and you need to fix it before releasing the game.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;facilitating-refactoring&quot;&gt;üõ†Ô∏è Facilitating Refactoring&lt;&#x2F;h3&gt;
&lt;p&gt;Refactoring means &lt;strong&gt;making changes to your code to improve its structure or performance without altering its external
behavior&lt;&#x2F;strong&gt;. Tests act as a safety net during refactoring. They ensure that your changes haven&#x27;t broken any existing
functionality.&lt;&#x2F;p&gt;
&lt;p&gt;For instance, if you decide to optimize the code of your messaging app to make it faster, tests can confirm that users
can still send and receive messages after the changes are made.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;encouraging-modularity&quot;&gt;üß© Encouraging Modularity&lt;&#x2F;h3&gt;
&lt;p&gt;Writing tests encourages you &lt;strong&gt;to break down your code into smaller, more manageable parts&lt;&#x2F;strong&gt;. Each part can be tested
independently, which makes it easier to identify and fix problems.&lt;&#x2F;p&gt;
&lt;p&gt;Think of it like assembling a puzzle. It&#x27;s easier to solve when you work on smaller sections at a time. For example, if
you&#x27;re developing a social media platform, you might write separate tests for user authentication, posting updates, and
liking posts. This modular approach makes it simpler to maintain and update your codebase over time.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;house-with-garden-boosting-confidence&quot;&gt;üè° Boosting Confidence&lt;&#x2F;h3&gt;
&lt;p&gt;Writing tests gives you confidence that your software works as intended. It&#x27;s like having a &lt;strong&gt;safety net that ensures
your code behaves predictably&lt;&#x2F;strong&gt;, which can boost your confidence as a developer. When you know your tests cover various
scenarios and edge cases, you can release new features or updates with peace of mind.&lt;&#x2F;p&gt;
&lt;div class=&quot;separator&quot;&gt;&lt;&#x2F;div&gt;
&lt;p&gt;Writing tests in software development is like having a quality control mechanism that helps you build
better and more reliable software. &lt;strong&gt;It saves time, reduces headaches, and ultimately leads to happier users&lt;&#x2F;strong&gt;.
Plus, it&#x27;s a &lt;strong&gt;skill that&#x27;s highly valued&lt;&#x2F;strong&gt; in the tech industry.&lt;&#x2F;p&gt;
&lt;p&gt;If you&#x27;re not already writing tests, now&#x27;s a great time to start! üíØ&lt;&#x2F;p&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>Functional Tests</title>
		<published>2023-08-26T00:00:00+00:00</published>
		<updated>2023-08-26T00:00:00+00:00</updated>
		<link rel="alternate" href="https://jesusvalera.dev/functional-tests/" type="text/html"/>
		<id>https://jesusvalera.dev/functional-tests/</id>
		<content type="html">&lt;p&gt;&lt;img src=&quot;&#x2F;images&#x2F;2023-08-26&#x2F;1.png&quot; alt=&quot;functional testing types&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;A test is an empirical assertion that demonstrates the behaviour of an expected functionality from some assertion.&lt;&#x2F;p&gt;
&lt;p&gt;Tests can be classified by using the &amp;quot;box&amp;quot; approach.&lt;&#x2F;p&gt;
&lt;p&gt;This approach divides the tests on how they interact with the system from the point of view of the
tester. There are two big approaches, the white and the black-box.&lt;&#x2F;p&gt;
&lt;p&gt;The &lt;code&gt;white-box&lt;&#x2F;code&gt; approach happens when the tester has access to the source code, in this scenario, the tester will focus
on testing all possible combinations to assert the test being written will cover the different code paths.&lt;&#x2F;p&gt;
&lt;p&gt;In the &lt;code&gt;black-box&lt;&#x2F;code&gt; approach, on the contrary, the system is opaque, what happens inside the application is &amp;quot;magic&amp;quot;, in
this scenario, the tester can only send an input and expect some output, the tester is not worried about what happens
internally, but how the application reacts based on the sent input.&lt;&#x2F;p&gt;
&lt;p&gt;However, there is another classification for tests, which is a bit more specific, which are &lt;code&gt;functional&lt;&#x2F;code&gt;
and &lt;code&gt;non-functional&lt;&#x2F;code&gt; tests.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;code&gt;Non-functional&lt;&#x2F;code&gt; tests refers to aspects that are not related to a specific function or user action. They can be divided
into &lt;code&gt;security&lt;&#x2F;code&gt;, &lt;code&gt;performance&lt;&#x2F;code&gt;, &lt;code&gt;usability&lt;&#x2F;code&gt; and &lt;code&gt;compatibility&lt;&#x2F;code&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;code&gt;Functional&lt;&#x2F;code&gt; tests refers to activities that verify a specific action or function of the code. They can be divided into
&lt;code&gt;unit&lt;&#x2F;code&gt;, &lt;code&gt;integration&lt;&#x2F;code&gt; and &lt;code&gt;system&lt;&#x2F;code&gt; tests. From a tester point of view, we could consider the functional tests more
important as we will spend most of our time on these kind of test rather than non-functional, also, it is tremendous
important to master them to write cleaner code.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;differences-between-functional-tests&quot;&gt;Differences between functional tests&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;unit-test&quot;&gt;Unit test&lt;&#x2F;h3&gt;
&lt;img src=&quot;&#x2F;images&#x2F;2023-08-26&#x2F;2.png&quot; alt=&quot;given-when-then&quot; style=&quot;width: 80%&quot;&gt;
&lt;p&gt;A unit test is a verification between an input and an expected output, it is an isolated logic and decoupled from the
outside. We could consider a unit test as the public method from one API class. Usually, it is a good idea to use
interfaces to invert the dependencies in our application (~DIP: Dependency Inversion Principle).&lt;&#x2F;p&gt;
&lt;p&gt;Indeed, we can also depend on external dependencies using stubs or mocks.&lt;&#x2F;p&gt;
&lt;p&gt;The benefit of using unit test is that they took less time on execution, for that reason, they can be launched more
often. Also, they force you to write less coupled code, doing better software design.&lt;&#x2F;p&gt;
&lt;p&gt;So, a unit test is, therefore, the demonstration of an isolated functionality from the outside.&lt;&#x2F;p&gt;
&lt;p&gt;The unit tests give you:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;A simple way to test your code exhaustively and independently&lt;&#x2F;li&gt;
&lt;li&gt;They command you to the portion of code that causes the problem&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;A test is not a unit test if‚Ä¶&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;it performs queries to the database&lt;&#x2F;li&gt;
&lt;li&gt;it connects in any way with the network&lt;&#x2F;li&gt;
&lt;li&gt;it operates with a file system&lt;&#x2F;li&gt;
&lt;li&gt;it cannot be launched in parallel with other unit tests&lt;&#x2F;li&gt;
&lt;li&gt;you need to modify any file (config file for example) to be able to run it&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;They are also known as ‚Äòwhite box testing‚Äô. We know the internal code from the method.&lt;&#x2F;p&gt;
&lt;p&gt;The tests are focused on the object state.&lt;&#x2F;p&gt;
&lt;p&gt;There are frameworks for automatizing this task, the most popular is the xUnit family: JUnit, PHPUnit‚Ä¶&lt;&#x2F;p&gt;
&lt;h3 id=&quot;integration-test&quot;&gt;Integration test&lt;&#x2F;h3&gt;
&lt;p&gt;The integration tests are similar to the units except that they are focused on proving the interaction between two or
more components together, they could be classes, modules, etc‚Ä¶&lt;&#x2F;p&gt;
&lt;p&gt;Further, this kind of tests can connect to the database, to the network, filesystem, etc.&lt;&#x2F;p&gt;
&lt;p&gt;The integration tests are slower than unit tests due to their complexity, besides, sometimes it‚Äôs needed to load
specific configuration in order to work properly.&lt;&#x2F;p&gt;
&lt;p&gt;These kinds of tests are dependent on the environment, I mean, if a test fails, the problem could be a different
configuration from one environment to another.&lt;&#x2F;p&gt;
&lt;p&gt;You can even create integration tests with PHPUnit, the &lt;code&gt;Unit&lt;&#x2F;code&gt; in the name is just a convention.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;system-test&quot;&gt;System test&lt;&#x2F;h3&gt;
&lt;p&gt;The system tests are called end-to-end (E2E) or browser testing.&lt;&#x2F;p&gt;
&lt;p&gt;These kinds of tests do not check the how, but the what, I mean, if that specific test executes some magic but the
expected result is whatever we want.&lt;&#x2F;p&gt;
&lt;p&gt;In other words, we do not care what the developer did, we care about the output as we were the client.&lt;&#x2F;p&gt;
&lt;img src=&quot;&#x2F;images&#x2F;2023-08-26&#x2F;3.png&quot; alt=&quot;functional-test&quot; style=&quot;width: 80%&quot;&gt;
&lt;p&gt;For example, if we send a form with a wrong value, we expect to see an error message in a specific field, we do not care
about what regular expression is and why it failed.&lt;&#x2F;p&gt;
&lt;p&gt;Those tests are also known as ‚Äúblack-box testing‚Äù. We do not know the code we are testing. They focus on object
behaviour.&lt;&#x2F;p&gt;
&lt;p&gt;One of the best known is Selenium.&lt;&#x2F;p&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>ORM: Data Mapper vs Active Record</title>
		<published>2022-12-06T00:00:00+00:00</published>
		<updated>2022-12-06T00:00:00+00:00</updated>
		<link rel="alternate" href="https://jesusvalera.dev/orm-data-mapper-vs-active-record/" type="text/html"/>
		<id>https://jesusvalera.dev/orm-data-mapper-vs-active-record/</id>
		<content type="html">&lt;p&gt;&lt;img src=&quot;&#x2F;images&#x2F;2022-12-06&#x2F;1.png&quot; alt=&quot;hiking in Grunewald&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;ORM stands for &lt;strong&gt;Object-Relational Mapping&lt;&#x2F;strong&gt;, that is, the technique that transforms Objects from OOP into rows in the
database and vice versa.&lt;&#x2F;p&gt;
&lt;p&gt;There are two patterns:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Active Record&lt;&#x2F;strong&gt;: The record (entity) itself can actively change the DB&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;Data Mapper&lt;&#x2F;strong&gt;: There is an external object that persists the entities&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;blockquote&gt;
&lt;p&gt;I will skip everything related to the DB setup like the XML configuration files for the Data Mapper and the
&lt;em&gt;hasOne()&lt;&#x2F;em&gt; &#x2F; &lt;em&gt;hasMany()&lt;&#x2F;em&gt; methods for the Active Record.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;h2 id=&quot;active-record&quot;&gt;Active Record&lt;&#x2F;h2&gt;
&lt;p&gt;As I previously mentioned, the entity itself can be created, updated or deleted. In PHP for example, Eloquent is an
Active Record ORM developed by the Laravel community.&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;php source&quot; class=&quot;language-php source z-code&quot;&gt;&lt;code class=&quot;language-php source&quot; data-lang=&quot;php source&quot;&gt;&lt;span class=&quot;z-source z-php&quot;&gt;&lt;span class=&quot;z-meta z-class z-php&quot;&gt;&lt;span class=&quot;z-storage z-modifier z-abstract z-php&quot;&gt;final &lt;&#x2F;span&gt;&lt;span class=&quot;z-storage z-type z-class z-php&quot;&gt;class&lt;&#x2F;span&gt; &lt;span class=&quot;z-entity z-name z-class z-php&quot;&gt;UserCreator&lt;&#x2F;span&gt;
&lt;span class=&quot;z-meta z-block z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-php&quot;&gt;{&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-class z-php&quot;&gt;&lt;span class=&quot;z-meta z-block z-php&quot;&gt;
    &lt;span class=&quot;z-storage z-modifier z-php&quot;&gt;public&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-function z-php&quot;&gt;&lt;span class=&quot;z-storage z-type z-function z-php&quot;&gt;function&lt;&#x2F;span&gt; &lt;span class=&quot;z-entity z-name z-function z-php&quot;&gt;create&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-parameters z-php&quot;&gt;&lt;span class=&quot;z-meta z-group z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-php&quot;&gt;(&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-parameters z-php&quot;&gt;&lt;span class=&quot;z-meta z-group z-php&quot;&gt;&lt;span class=&quot;z-meta z-path z-php&quot;&gt;&lt;span class=&quot;z-support z-class z-php&quot;&gt;UserInformation&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-variable z-parameter z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-variable z-php&quot;&gt;$&lt;&#x2F;span&gt;userInfo&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-php&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-return-type z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-separator z-php&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-path z-php&quot;&gt;&lt;span class=&quot;z-support z-class z-php&quot;&gt;void&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
    &lt;span class=&quot;z-meta z-block z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-begin z-php&quot;&gt;{&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-php&quot;&gt;&lt;span class=&quot;z-meta z-block z-php&quot;&gt;
        &lt;span class=&quot;z-variable z-other z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-variable z-php&quot;&gt;$&lt;&#x2F;span&gt;address&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-assignment z-php&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-path z-php&quot;&gt;&lt;span class=&quot;z-support z-class z-php&quot;&gt;Address&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-static z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-accessor z-double-colon z-php&quot;&gt;::&lt;&#x2F;span&gt;&lt;span class=&quot;z-variable z-function z-php&quot;&gt;createFrom&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-php&quot;&gt;&lt;span class=&quot;z-meta z-group z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-php&quot;&gt;(&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-php&quot;&gt;&lt;span class=&quot;z-meta z-group z-php&quot;&gt;&lt;span class=&quot;z-variable z-other z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-variable z-php&quot;&gt;$&lt;&#x2F;span&gt;userInfo&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-method z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-accessor z-arrow z-php&quot;&gt;-&amp;gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-variable z-function z-php&quot;&gt;address&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-php&quot;&gt;&lt;span class=&quot;z-meta z-group z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-php&quot;&gt;(&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-php&quot;&gt;&lt;span class=&quot;z-meta z-group z-php&quot;&gt;&lt;span class=&quot;z-meta z-function-call z-php&quot;&gt;&lt;span class=&quot;z-meta z-group z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-php&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-php&quot;&gt;&lt;span class=&quot;z-meta z-group z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-php&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-terminator z-expression z-php&quot;&gt;;&lt;&#x2F;span&gt;
        &lt;span class=&quot;z-variable z-other z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-variable z-php&quot;&gt;$&lt;&#x2F;span&gt;address&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-method z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-accessor z-arrow z-php&quot;&gt;-&amp;gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-variable z-function z-php&quot;&gt;save&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-php&quot;&gt;&lt;span class=&quot;z-meta z-group z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-php&quot;&gt;(&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-php&quot;&gt;&lt;span class=&quot;z-meta z-group z-php&quot;&gt;&lt;span class=&quot;z-meta z-function-call z-php&quot;&gt;&lt;span class=&quot;z-meta z-group z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-php&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-comment z-line z-number-sign z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-comment z-php&quot;&gt;#&lt;&#x2F;span&gt; Address is stored in the database
&lt;&#x2F;span&gt;
        &lt;span class=&quot;z-variable z-other z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-variable z-php&quot;&gt;$&lt;&#x2F;span&gt;user&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-assignment z-php&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-path z-php&quot;&gt;&lt;span class=&quot;z-support z-class z-php&quot;&gt;User&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-static z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-accessor z-double-colon z-php&quot;&gt;::&lt;&#x2F;span&gt;&lt;span class=&quot;z-variable z-function z-php&quot;&gt;createFrom&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-php&quot;&gt;&lt;span class=&quot;z-meta z-group z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-php&quot;&gt;(&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-php&quot;&gt;&lt;span class=&quot;z-meta z-group z-php&quot;&gt;&lt;span class=&quot;z-variable z-other z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-variable z-php&quot;&gt;$&lt;&#x2F;span&gt;userInfo&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-method z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-accessor z-arrow z-php&quot;&gt;-&amp;gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-variable z-function z-php&quot;&gt;user&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-php&quot;&gt;&lt;span class=&quot;z-meta z-group z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-php&quot;&gt;(&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-php&quot;&gt;&lt;span class=&quot;z-meta z-group z-php&quot;&gt;&lt;span class=&quot;z-meta z-function-call z-php&quot;&gt;&lt;span class=&quot;z-meta z-group z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-php&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-php&quot;&gt;&lt;span class=&quot;z-meta z-group z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-php&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-terminator z-expression z-php&quot;&gt;;&lt;&#x2F;span&gt;
        &lt;span class=&quot;z-variable z-other z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-variable z-php&quot;&gt;$&lt;&#x2F;span&gt;user&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-accessor z-arrow z-php&quot;&gt;-&amp;gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-variable z-other z-member z-php&quot;&gt;address&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-assignment z-php&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;z-variable z-other z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-variable z-php&quot;&gt;$&lt;&#x2F;span&gt;address&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-terminator z-expression z-php&quot;&gt;;&lt;&#x2F;span&gt; &lt;span class=&quot;z-comment z-line z-double-slash z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-comment z-php&quot;&gt;&#x2F;&#x2F;&lt;&#x2F;span&gt; Set relationship
&lt;&#x2F;span&gt;        &lt;span class=&quot;z-variable z-other z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-variable z-php&quot;&gt;$&lt;&#x2F;span&gt;user&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-method z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-accessor z-arrow z-php&quot;&gt;-&amp;gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-variable z-function z-php&quot;&gt;save&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-php&quot;&gt;&lt;span class=&quot;z-meta z-group z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-php&quot;&gt;(&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-php&quot;&gt;&lt;span class=&quot;z-meta z-group z-php&quot;&gt;&lt;span class=&quot;z-meta z-function-call z-php&quot;&gt;&lt;span class=&quot;z-meta z-group z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-php&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-terminator z-expression z-php&quot;&gt;;&lt;&#x2F;span&gt; &lt;span class=&quot;z-comment z-line z-number-sign z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-comment z-php&quot;&gt;#&lt;&#x2F;span&gt; User is stored in the database
&lt;&#x2F;span&gt;    &lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-php&quot;&gt;&lt;span class=&quot;z-meta z-block z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-end z-php&quot;&gt;}&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-class z-php&quot;&gt;&lt;span class=&quot;z-meta z-block z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-php&quot;&gt;}&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h1 id=&quot;data-mapper&quot;&gt;Data Mapper&lt;&#x2F;h1&gt;
&lt;p&gt;In the data mapper, we need an external class that will update the DB. In PHP for example, Doctrine is the de facto Data
Mapper ORM for Symfony.&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;php source&quot; class=&quot;language-php source z-code&quot;&gt;&lt;code class=&quot;language-php source&quot; data-lang=&quot;php source&quot;&gt;&lt;span class=&quot;z-source z-php&quot;&gt;&lt;span class=&quot;z-meta z-class z-php&quot;&gt;&lt;span class=&quot;z-storage z-modifier z-abstract z-php&quot;&gt;final &lt;&#x2F;span&gt;&lt;span class=&quot;z-storage z-type z-class z-php&quot;&gt;class&lt;&#x2F;span&gt; &lt;span class=&quot;z-entity z-name z-class z-php&quot;&gt;UserCreator&lt;&#x2F;span&gt;
&lt;span class=&quot;z-meta z-block z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-php&quot;&gt;{&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-class z-php&quot;&gt;&lt;span class=&quot;z-meta z-block z-php&quot;&gt;
    &lt;span class=&quot;z-storage z-modifier z-php&quot;&gt;public&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-function z-php&quot;&gt;&lt;span class=&quot;z-storage z-type z-function z-php&quot;&gt;function&lt;&#x2F;span&gt; &lt;span class=&quot;z-entity z-name z-function z-php&quot;&gt;&lt;span class=&quot;z-support z-function z-magic z-php&quot;&gt;__construct&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-parameters z-php&quot;&gt;&lt;span class=&quot;z-meta z-group z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-php&quot;&gt;(&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-parameters z-php&quot;&gt;&lt;span class=&quot;z-meta z-group z-php&quot;&gt;
        &lt;span class=&quot;z-meta z-path z-php&quot;&gt;&lt;span class=&quot;z-support z-class z-php&quot;&gt;private&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-path z-php&quot;&gt;&lt;span class=&quot;z-support z-class z-php&quot;&gt;EntityManager&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-variable z-parameter z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-variable z-php&quot;&gt;$&lt;&#x2F;span&gt;entityManager&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-php&quot;&gt;,&lt;&#x2F;span&gt;
    &lt;span class=&quot;z-punctuation z-section z-group z-end z-php&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-php&quot;&gt; &lt;span class=&quot;z-meta z-block z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-begin z-php&quot;&gt;{&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-php&quot;&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-php&quot;&gt;&lt;span class=&quot;z-meta z-block z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-end z-php&quot;&gt;}&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;

    &lt;span class=&quot;z-storage z-modifier z-php&quot;&gt;public&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-function z-php&quot;&gt;&lt;span class=&quot;z-storage z-type z-function z-php&quot;&gt;function&lt;&#x2F;span&gt; &lt;span class=&quot;z-entity z-name z-function z-php&quot;&gt;create&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-parameters z-php&quot;&gt;&lt;span class=&quot;z-meta z-group z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-php&quot;&gt;(&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-parameters z-php&quot;&gt;&lt;span class=&quot;z-meta z-group z-php&quot;&gt;&lt;span class=&quot;z-meta z-path z-php&quot;&gt;&lt;span class=&quot;z-support z-class z-php&quot;&gt;UserInformation&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-variable z-parameter z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-variable z-php&quot;&gt;$&lt;&#x2F;span&gt;userInfo&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-php&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-return-type z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-separator z-php&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-path z-php&quot;&gt;&lt;span class=&quot;z-support z-class z-php&quot;&gt;void&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
    &lt;span class=&quot;z-meta z-block z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-begin z-php&quot;&gt;{&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-php&quot;&gt;&lt;span class=&quot;z-meta z-block z-php&quot;&gt;
        &lt;span class=&quot;z-variable z-other z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-variable z-php&quot;&gt;$&lt;&#x2F;span&gt;address&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-assignment z-php&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-path z-php&quot;&gt;&lt;span class=&quot;z-support z-class z-php&quot;&gt;Address&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-static z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-accessor z-double-colon z-php&quot;&gt;::&lt;&#x2F;span&gt;&lt;span class=&quot;z-variable z-function z-php&quot;&gt;createFrom&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-php&quot;&gt;&lt;span class=&quot;z-meta z-group z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-php&quot;&gt;(&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-php&quot;&gt;&lt;span class=&quot;z-meta z-group z-php&quot;&gt;&lt;span class=&quot;z-variable z-other z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-variable z-php&quot;&gt;$&lt;&#x2F;span&gt;userInfo&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-method z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-accessor z-arrow z-php&quot;&gt;-&amp;gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-variable z-function z-php&quot;&gt;address&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-php&quot;&gt;&lt;span class=&quot;z-meta z-group z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-php&quot;&gt;(&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-php&quot;&gt;&lt;span class=&quot;z-meta z-group z-php&quot;&gt;&lt;span class=&quot;z-meta z-function-call z-php&quot;&gt;&lt;span class=&quot;z-meta z-group z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-php&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-php&quot;&gt;&lt;span class=&quot;z-meta z-group z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-php&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-terminator z-expression z-php&quot;&gt;;&lt;&#x2F;span&gt;
        &lt;span class=&quot;z-variable z-other z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-variable z-php&quot;&gt;$&lt;&#x2F;span&gt;user&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-assignment z-php&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-path z-php&quot;&gt;&lt;span class=&quot;z-support z-class z-php&quot;&gt;User&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-static z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-accessor z-double-colon z-php&quot;&gt;::&lt;&#x2F;span&gt;&lt;span class=&quot;z-variable z-function z-php&quot;&gt;createFrom&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-php&quot;&gt;&lt;span class=&quot;z-meta z-group z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-php&quot;&gt;(&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-php&quot;&gt;&lt;span class=&quot;z-meta z-group z-php&quot;&gt;&lt;span class=&quot;z-variable z-other z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-variable z-php&quot;&gt;$&lt;&#x2F;span&gt;userInfo&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-method z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-accessor z-arrow z-php&quot;&gt;-&amp;gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-variable z-function z-php&quot;&gt;user&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-php&quot;&gt;&lt;span class=&quot;z-meta z-group z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-php&quot;&gt;(&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-php&quot;&gt;&lt;span class=&quot;z-meta z-group z-php&quot;&gt;&lt;span class=&quot;z-meta z-function-call z-php&quot;&gt;&lt;span class=&quot;z-meta z-group z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-php&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-php&quot;&gt;&lt;span class=&quot;z-meta z-group z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-php&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-terminator z-expression z-php&quot;&gt;;&lt;&#x2F;span&gt;
        &lt;span class=&quot;z-variable z-other z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-variable z-php&quot;&gt;$&lt;&#x2F;span&gt;user&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-accessor z-arrow z-php&quot;&gt;-&amp;gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-variable z-other z-member z-php&quot;&gt;address&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-assignment z-php&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;z-variable z-other z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-variable z-php&quot;&gt;$&lt;&#x2F;span&gt;address&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-terminator z-expression z-php&quot;&gt;;&lt;&#x2F;span&gt; &lt;span class=&quot;z-comment z-line z-number-sign z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-comment z-php&quot;&gt;#&lt;&#x2F;span&gt; Set relationship
&lt;&#x2F;span&gt;
        &lt;span class=&quot;z-comment z-line z-number-sign z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-comment z-php&quot;&gt;#&lt;&#x2F;span&gt; We persist all objects we want to update
&lt;&#x2F;span&gt;        &lt;span class=&quot;z-variable z-language z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-variable z-php&quot;&gt;$&lt;&#x2F;span&gt;this&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-accessor z-arrow z-php&quot;&gt;-&amp;gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-variable z-other z-member z-php&quot;&gt;entityManager&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-method z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-accessor z-arrow z-php&quot;&gt;-&amp;gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-variable z-function z-php&quot;&gt;persist&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-php&quot;&gt;&lt;span class=&quot;z-meta z-group z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-php&quot;&gt;(&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-php&quot;&gt;&lt;span class=&quot;z-meta z-group z-php&quot;&gt;&lt;span class=&quot;z-variable z-other z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-variable z-php&quot;&gt;$&lt;&#x2F;span&gt;address&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-php&quot;&gt;&lt;span class=&quot;z-meta z-group z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-php&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-terminator z-expression z-php&quot;&gt;;&lt;&#x2F;span&gt;
        &lt;span class=&quot;z-variable z-language z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-variable z-php&quot;&gt;$&lt;&#x2F;span&gt;this&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-accessor z-arrow z-php&quot;&gt;-&amp;gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-variable z-other z-member z-php&quot;&gt;entityManager&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-method z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-accessor z-arrow z-php&quot;&gt;-&amp;gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-variable z-function z-php&quot;&gt;persist&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-php&quot;&gt;&lt;span class=&quot;z-meta z-group z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-php&quot;&gt;(&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-php&quot;&gt;&lt;span class=&quot;z-meta z-group z-php&quot;&gt;&lt;span class=&quot;z-variable z-other z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-variable z-php&quot;&gt;$&lt;&#x2F;span&gt;user&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-php&quot;&gt;&lt;span class=&quot;z-meta z-group z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-php&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-terminator z-expression z-php&quot;&gt;;&lt;&#x2F;span&gt;

        &lt;span class=&quot;z-comment z-line z-number-sign z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-comment z-php&quot;&gt;#&lt;&#x2F;span&gt; Finally, flushing the entity manager will execute the SQLs
&lt;&#x2F;span&gt;        &lt;span class=&quot;z-variable z-language z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-variable z-php&quot;&gt;$&lt;&#x2F;span&gt;this&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-accessor z-arrow z-php&quot;&gt;-&amp;gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-variable z-other z-member z-php&quot;&gt;entityManager&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-method z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-accessor z-arrow z-php&quot;&gt;-&amp;gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-variable z-function z-php&quot;&gt;flush&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-php&quot;&gt;&lt;span class=&quot;z-meta z-group z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-php&quot;&gt;(&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-php&quot;&gt;&lt;span class=&quot;z-meta z-group z-php&quot;&gt;&lt;span class=&quot;z-meta z-function-call z-php&quot;&gt;&lt;span class=&quot;z-meta z-group z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-php&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-terminator z-expression z-php&quot;&gt;;&lt;&#x2F;span&gt;
    &lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-php&quot;&gt;&lt;span class=&quot;z-meta z-block z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-end z-php&quot;&gt;}&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-class z-php&quot;&gt;&lt;span class=&quot;z-meta z-block z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-php&quot;&gt;}&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;div class=&quot;separator&quot;&gt;&lt;&#x2F;div&gt;
&lt;p&gt;So far, the code was very similar in both situations, you have to create a specific entity object, (for simplicity) we
used a &lt;code&gt;createFrom()&lt;&#x2F;code&gt; named-constructor in both snippets and we called &lt;code&gt;save()&lt;&#x2F;code&gt; or &lt;code&gt;persist()&lt;&#x2F;code&gt; and &lt;code&gt;flush()&lt;&#x2F;code&gt; depending
on the scenario.&lt;&#x2F;p&gt;
&lt;p&gt;Although, if you take a look at both snippets, you can see already the Data Mapper is using an external
dependency (&lt;code&gt;Entity Manager&lt;&#x2F;code&gt; object) which is odd and clearly, is harder if you decide to introduce some tests to
the &lt;code&gt;UserCreator&lt;&#x2F;code&gt; class, meanwhile in the &lt;code&gt;Active Record&lt;&#x2F;code&gt; class, the entities are saving themselves, so we don‚Äôt have
any dependency at a glance, but that is not completely true, the entity itself has knowledge of the DB, and it will be
difficult to write some tests if we use the &lt;code&gt;User&lt;&#x2F;code&gt; entity directly.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;repository-pattern&quot;&gt;Repository Pattern&lt;&#x2F;h2&gt;
&lt;p&gt;The repository pattern is a design pattern that hides the database logic into a new class, exposing only the methods we
want to provide to the user.&lt;&#x2F;p&gt;
&lt;p&gt;In order to do this, we need to create an interface and a class that will implement the interface where we will drop all
logic.&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;php source&quot; class=&quot;language-php source z-code&quot;&gt;&lt;code class=&quot;language-php source&quot; data-lang=&quot;php source&quot;&gt;&lt;span class=&quot;z-source z-php&quot;&gt;&lt;span class=&quot;z-comment z-line z-number-sign z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-comment z-php&quot;&gt;#&lt;&#x2F;span&gt; App&#x2F;User&#x2F;Domain
&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-interface z-php&quot;&gt;&lt;span class=&quot;z-storage z-type z-interface z-php&quot;&gt;interface&lt;&#x2F;span&gt; &lt;span class=&quot;z-entity z-name z-interface z-php&quot;&gt;UserRepository&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-block z-begin z-php&quot;&gt;{&lt;&#x2F;span&gt;
    &lt;span class=&quot;z-meta z-function z-php&quot;&gt;&lt;span class=&quot;z-storage z-modifier z-php&quot;&gt;public&lt;&#x2F;span&gt; &lt;span class=&quot;z-storage z-type z-function z-php&quot;&gt;function&lt;&#x2F;span&gt; &lt;span class=&quot;z-entity z-name z-function z-php&quot;&gt;save&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-parameters z-php&quot;&gt;&lt;span class=&quot;z-meta z-group z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-php&quot;&gt;(&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-parameters z-php&quot;&gt;&lt;span class=&quot;z-meta z-group z-php&quot;&gt;&lt;span class=&quot;z-meta z-path z-php&quot;&gt;&lt;span class=&quot;z-support z-class z-php&quot;&gt;UserInformation&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-variable z-parameter z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-variable z-php&quot;&gt;$&lt;&#x2F;span&gt;userInfo&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-php&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-return-type z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-separator z-php&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-path z-php&quot;&gt;&lt;span class=&quot;z-support z-class z-php&quot;&gt;void&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-terminator z-expression z-php&quot;&gt;;&lt;&#x2F;span&gt;
&lt;span class=&quot;z-punctuation z-section z-block z-end z-php&quot;&gt;}&lt;&#x2F;span&gt;

&lt;span class=&quot;z-keyword z-operator z-bitwise z-php&quot;&gt;~&lt;&#x2F;span&gt;&lt;span class=&quot;z-keyword z-operator z-bitwise z-php&quot;&gt;~&lt;&#x2F;span&gt;&lt;span class=&quot;z-keyword z-operator z-bitwise z-php&quot;&gt;~&lt;&#x2F;span&gt;&lt;span class=&quot;z-keyword z-operator z-bitwise z-php&quot;&gt;~&lt;&#x2F;span&gt;

&lt;span class=&quot;z-comment z-line z-number-sign z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-comment z-php&quot;&gt;#&lt;&#x2F;span&gt; App&#x2F;User&#x2F;Infrastructure
&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-class z-php&quot;&gt;&lt;span class=&quot;z-storage z-modifier z-abstract z-php&quot;&gt;final &lt;&#x2F;span&gt;&lt;span class=&quot;z-storage z-type z-class z-php&quot;&gt;class&lt;&#x2F;span&gt; &lt;span class=&quot;z-entity z-name z-class z-php&quot;&gt;ActiveRecordUserRepository&lt;&#x2F;span&gt; &lt;span class=&quot;z-storage z-modifier z-implements z-php&quot;&gt;implements&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-path z-php&quot;&gt;&lt;span class=&quot;z-entity z-other z-inherited-class z-php&quot;&gt;UserRepository&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;span class=&quot;z-meta z-block z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-php&quot;&gt;{&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-class z-php&quot;&gt;&lt;span class=&quot;z-meta z-block z-php&quot;&gt;
    &lt;span class=&quot;z-storage z-modifier z-php&quot;&gt;public&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-function z-php&quot;&gt;&lt;span class=&quot;z-storage z-type z-function z-php&quot;&gt;function&lt;&#x2F;span&gt; &lt;span class=&quot;z-entity z-name z-function z-php&quot;&gt;save&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-parameters z-php&quot;&gt;&lt;span class=&quot;z-meta z-group z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-php&quot;&gt;(&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-parameters z-php&quot;&gt;&lt;span class=&quot;z-meta z-group z-php&quot;&gt;&lt;span class=&quot;z-meta z-path z-php&quot;&gt;&lt;span class=&quot;z-support z-class z-php&quot;&gt;UserInformation&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-variable z-parameter z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-variable z-php&quot;&gt;$&lt;&#x2F;span&gt;userInfo&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-php&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-return-type z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-separator z-php&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-path z-php&quot;&gt;&lt;span class=&quot;z-support z-class z-php&quot;&gt;void&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
    &lt;span class=&quot;z-meta z-block z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-begin z-php&quot;&gt;{&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-php&quot;&gt;&lt;span class=&quot;z-meta z-block z-php&quot;&gt;
        &lt;span class=&quot;z-variable z-other z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-variable z-php&quot;&gt;$&lt;&#x2F;span&gt;address&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-assignment z-php&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-path z-php&quot;&gt;&lt;span class=&quot;z-support z-class z-php&quot;&gt;Address&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-static z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-accessor z-double-colon z-php&quot;&gt;::&lt;&#x2F;span&gt;&lt;span class=&quot;z-variable z-function z-php&quot;&gt;createFrom&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-php&quot;&gt;&lt;span class=&quot;z-meta z-group z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-php&quot;&gt;(&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-php&quot;&gt;&lt;span class=&quot;z-meta z-group z-php&quot;&gt;&lt;span class=&quot;z-variable z-other z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-variable z-php&quot;&gt;$&lt;&#x2F;span&gt;userInfo&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-method z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-accessor z-arrow z-php&quot;&gt;-&amp;gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-variable z-function z-php&quot;&gt;address&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-php&quot;&gt;&lt;span class=&quot;z-meta z-group z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-php&quot;&gt;(&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-php&quot;&gt;&lt;span class=&quot;z-meta z-group z-php&quot;&gt;&lt;span class=&quot;z-meta z-function-call z-php&quot;&gt;&lt;span class=&quot;z-meta z-group z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-php&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-php&quot;&gt;&lt;span class=&quot;z-meta z-group z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-php&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-terminator z-expression z-php&quot;&gt;;&lt;&#x2F;span&gt;
        &lt;span class=&quot;z-variable z-other z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-variable z-php&quot;&gt;$&lt;&#x2F;span&gt;address&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-method z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-accessor z-arrow z-php&quot;&gt;-&amp;gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-variable z-function z-php&quot;&gt;save&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-php&quot;&gt;&lt;span class=&quot;z-meta z-group z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-php&quot;&gt;(&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-php&quot;&gt;&lt;span class=&quot;z-meta z-group z-php&quot;&gt;&lt;span class=&quot;z-meta z-function-call z-php&quot;&gt;&lt;span class=&quot;z-meta z-group z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-php&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;

        &lt;span class=&quot;z-variable z-other z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-variable z-php&quot;&gt;$&lt;&#x2F;span&gt;user&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-assignment z-php&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-path z-php&quot;&gt;&lt;span class=&quot;z-support z-class z-php&quot;&gt;User&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-static z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-accessor z-double-colon z-php&quot;&gt;::&lt;&#x2F;span&gt;&lt;span class=&quot;z-variable z-function z-php&quot;&gt;createFrom&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-php&quot;&gt;&lt;span class=&quot;z-meta z-group z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-php&quot;&gt;(&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-php&quot;&gt;&lt;span class=&quot;z-meta z-group z-php&quot;&gt;&lt;span class=&quot;z-variable z-other z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-variable z-php&quot;&gt;$&lt;&#x2F;span&gt;userInfo&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-method z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-accessor z-arrow z-php&quot;&gt;-&amp;gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-variable z-function z-php&quot;&gt;user&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-php&quot;&gt;&lt;span class=&quot;z-meta z-group z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-php&quot;&gt;(&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-php&quot;&gt;&lt;span class=&quot;z-meta z-group z-php&quot;&gt;&lt;span class=&quot;z-meta z-function-call z-php&quot;&gt;&lt;span class=&quot;z-meta z-group z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-php&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-php&quot;&gt;&lt;span class=&quot;z-meta z-group z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-php&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-terminator z-expression z-php&quot;&gt;;&lt;&#x2F;span&gt;
        &lt;span class=&quot;z-variable z-other z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-variable z-php&quot;&gt;$&lt;&#x2F;span&gt;user&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-accessor z-arrow z-php&quot;&gt;-&amp;gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-variable z-other z-member z-php&quot;&gt;address&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-assignment z-php&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;z-variable z-other z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-variable z-php&quot;&gt;$&lt;&#x2F;span&gt;address&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-terminator z-expression z-php&quot;&gt;;&lt;&#x2F;span&gt;
        &lt;span class=&quot;z-variable z-other z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-variable z-php&quot;&gt;$&lt;&#x2F;span&gt;user&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-method z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-accessor z-arrow z-php&quot;&gt;-&amp;gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-variable z-function z-php&quot;&gt;save&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-php&quot;&gt;&lt;span class=&quot;z-meta z-group z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-php&quot;&gt;(&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-php&quot;&gt;&lt;span class=&quot;z-meta z-group z-php&quot;&gt;&lt;span class=&quot;z-meta z-function-call z-php&quot;&gt;&lt;span class=&quot;z-meta z-group z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-php&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-terminator z-expression z-php&quot;&gt;;&lt;&#x2F;span&gt;
    &lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-php&quot;&gt;&lt;span class=&quot;z-meta z-block z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-end z-php&quot;&gt;}&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-class z-php&quot;&gt;&lt;span class=&quot;z-meta z-block z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-php&quot;&gt;}&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;

&lt;span class=&quot;z-meta z-class z-php&quot;&gt;&lt;span class=&quot;z-storage z-modifier z-abstract z-php&quot;&gt;final &lt;&#x2F;span&gt;&lt;span class=&quot;z-storage z-type z-class z-php&quot;&gt;class&lt;&#x2F;span&gt; &lt;span class=&quot;z-entity z-name z-class z-php&quot;&gt;DataMapperUserRepository&lt;&#x2F;span&gt; &lt;span class=&quot;z-storage z-modifier z-implements z-php&quot;&gt;implements&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-path z-php&quot;&gt;&lt;span class=&quot;z-entity z-other z-inherited-class z-php&quot;&gt;UserRepository&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;span class=&quot;z-meta z-block z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-php&quot;&gt;{&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-class z-php&quot;&gt;&lt;span class=&quot;z-meta z-block z-php&quot;&gt;
    &lt;span class=&quot;z-storage z-modifier z-php&quot;&gt;public&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-function z-php&quot;&gt;&lt;span class=&quot;z-storage z-type z-function z-php&quot;&gt;function&lt;&#x2F;span&gt; &lt;span class=&quot;z-entity z-name z-function z-php&quot;&gt;&lt;span class=&quot;z-support z-function z-magic z-php&quot;&gt;__construct&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-parameters z-php&quot;&gt;&lt;span class=&quot;z-meta z-group z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-php&quot;&gt;(&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-parameters z-php&quot;&gt;&lt;span class=&quot;z-meta z-group z-php&quot;&gt;
        &lt;span class=&quot;z-meta z-path z-php&quot;&gt;&lt;span class=&quot;z-support z-class z-php&quot;&gt;private&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-path z-php&quot;&gt;&lt;span class=&quot;z-support z-class z-php&quot;&gt;EntityManager&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-variable z-parameter z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-variable z-php&quot;&gt;$&lt;&#x2F;span&gt;entityManager&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-php&quot;&gt;,&lt;&#x2F;span&gt;
    &lt;span class=&quot;z-punctuation z-section z-group z-end z-php&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-php&quot;&gt; &lt;span class=&quot;z-meta z-block z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-begin z-php&quot;&gt;{&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-php&quot;&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-php&quot;&gt;&lt;span class=&quot;z-meta z-block z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-end z-php&quot;&gt;}&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;

    &lt;span class=&quot;z-storage z-modifier z-php&quot;&gt;public&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-function z-php&quot;&gt;&lt;span class=&quot;z-storage z-type z-function z-php&quot;&gt;function&lt;&#x2F;span&gt; &lt;span class=&quot;z-entity z-name z-function z-php&quot;&gt;save&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-parameters z-php&quot;&gt;&lt;span class=&quot;z-meta z-group z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-php&quot;&gt;(&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-parameters z-php&quot;&gt;&lt;span class=&quot;z-meta z-group z-php&quot;&gt;&lt;span class=&quot;z-meta z-path z-php&quot;&gt;&lt;span class=&quot;z-support z-class z-php&quot;&gt;UserInformation&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-variable z-parameter z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-variable z-php&quot;&gt;$&lt;&#x2F;span&gt;userInfo&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-php&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-return-type z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-separator z-php&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-path z-php&quot;&gt;&lt;span class=&quot;z-support z-class z-php&quot;&gt;void&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
    &lt;span class=&quot;z-meta z-block z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-begin z-php&quot;&gt;{&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-php&quot;&gt;&lt;span class=&quot;z-meta z-block z-php&quot;&gt;
        &lt;span class=&quot;z-variable z-other z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-variable z-php&quot;&gt;$&lt;&#x2F;span&gt;address&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-assignment z-php&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-path z-php&quot;&gt;&lt;span class=&quot;z-support z-class z-php&quot;&gt;Address&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-static z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-accessor z-double-colon z-php&quot;&gt;::&lt;&#x2F;span&gt;&lt;span class=&quot;z-variable z-function z-php&quot;&gt;createFrom&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-php&quot;&gt;&lt;span class=&quot;z-meta z-group z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-php&quot;&gt;(&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-php&quot;&gt;&lt;span class=&quot;z-meta z-group z-php&quot;&gt;&lt;span class=&quot;z-variable z-other z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-variable z-php&quot;&gt;$&lt;&#x2F;span&gt;userInfo&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-method z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-accessor z-arrow z-php&quot;&gt;-&amp;gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-variable z-function z-php&quot;&gt;address&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-php&quot;&gt;&lt;span class=&quot;z-meta z-group z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-php&quot;&gt;(&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-php&quot;&gt;&lt;span class=&quot;z-meta z-group z-php&quot;&gt;&lt;span class=&quot;z-meta z-function-call z-php&quot;&gt;&lt;span class=&quot;z-meta z-group z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-php&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-php&quot;&gt;&lt;span class=&quot;z-meta z-group z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-php&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-terminator z-expression z-php&quot;&gt;;&lt;&#x2F;span&gt;
        &lt;span class=&quot;z-variable z-other z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-variable z-php&quot;&gt;$&lt;&#x2F;span&gt;user&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-assignment z-php&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-path z-php&quot;&gt;&lt;span class=&quot;z-support z-class z-php&quot;&gt;User&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-static z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-accessor z-double-colon z-php&quot;&gt;::&lt;&#x2F;span&gt;&lt;span class=&quot;z-variable z-function z-php&quot;&gt;createFrom&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-php&quot;&gt;&lt;span class=&quot;z-meta z-group z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-php&quot;&gt;(&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-php&quot;&gt;&lt;span class=&quot;z-meta z-group z-php&quot;&gt;&lt;span class=&quot;z-variable z-other z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-variable z-php&quot;&gt;$&lt;&#x2F;span&gt;userInfo&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-method z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-accessor z-arrow z-php&quot;&gt;-&amp;gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-variable z-function z-php&quot;&gt;user&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-php&quot;&gt;&lt;span class=&quot;z-meta z-group z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-php&quot;&gt;(&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-php&quot;&gt;&lt;span class=&quot;z-meta z-group z-php&quot;&gt;&lt;span class=&quot;z-meta z-function-call z-php&quot;&gt;&lt;span class=&quot;z-meta z-group z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-php&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-php&quot;&gt;&lt;span class=&quot;z-meta z-group z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-php&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-terminator z-expression z-php&quot;&gt;;&lt;&#x2F;span&gt;
        &lt;span class=&quot;z-variable z-other z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-variable z-php&quot;&gt;$&lt;&#x2F;span&gt;user&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-accessor z-arrow z-php&quot;&gt;-&amp;gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-variable z-other z-member z-php&quot;&gt;address&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-assignment z-php&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;z-variable z-other z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-variable z-php&quot;&gt;$&lt;&#x2F;span&gt;address&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-terminator z-expression z-php&quot;&gt;;&lt;&#x2F;span&gt;

        &lt;span class=&quot;z-variable z-language z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-variable z-php&quot;&gt;$&lt;&#x2F;span&gt;this&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-accessor z-arrow z-php&quot;&gt;-&amp;gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-variable z-other z-member z-php&quot;&gt;entityManager&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-method z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-accessor z-arrow z-php&quot;&gt;-&amp;gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-variable z-function z-php&quot;&gt;persist&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-php&quot;&gt;&lt;span class=&quot;z-meta z-group z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-php&quot;&gt;(&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-php&quot;&gt;&lt;span class=&quot;z-meta z-group z-php&quot;&gt;&lt;span class=&quot;z-variable z-other z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-variable z-php&quot;&gt;$&lt;&#x2F;span&gt;address&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-php&quot;&gt;&lt;span class=&quot;z-meta z-group z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-php&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-terminator z-expression z-php&quot;&gt;;&lt;&#x2F;span&gt;
        &lt;span class=&quot;z-variable z-language z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-variable z-php&quot;&gt;$&lt;&#x2F;span&gt;this&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-accessor z-arrow z-php&quot;&gt;-&amp;gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-variable z-other z-member z-php&quot;&gt;entityManager&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-method z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-accessor z-arrow z-php&quot;&gt;-&amp;gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-variable z-function z-php&quot;&gt;persist&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-php&quot;&gt;&lt;span class=&quot;z-meta z-group z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-php&quot;&gt;(&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-php&quot;&gt;&lt;span class=&quot;z-meta z-group z-php&quot;&gt;&lt;span class=&quot;z-variable z-other z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-variable z-php&quot;&gt;$&lt;&#x2F;span&gt;user&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-php&quot;&gt;&lt;span class=&quot;z-meta z-group z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-php&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-terminator z-expression z-php&quot;&gt;;&lt;&#x2F;span&gt;
        &lt;span class=&quot;z-variable z-language z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-variable z-php&quot;&gt;$&lt;&#x2F;span&gt;this&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-accessor z-arrow z-php&quot;&gt;-&amp;gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-variable z-other z-member z-php&quot;&gt;entityManager&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-method z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-accessor z-arrow z-php&quot;&gt;-&amp;gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-variable z-function z-php&quot;&gt;flush&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-php&quot;&gt;&lt;span class=&quot;z-meta z-group z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-php&quot;&gt;(&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-php&quot;&gt;&lt;span class=&quot;z-meta z-group z-php&quot;&gt;&lt;span class=&quot;z-meta z-function-call z-php&quot;&gt;&lt;span class=&quot;z-meta z-group z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-php&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-terminator z-expression z-php&quot;&gt;;&lt;&#x2F;span&gt;
    &lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-php&quot;&gt;&lt;span class=&quot;z-meta z-block z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-end z-php&quot;&gt;}&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-class z-php&quot;&gt;&lt;span class=&quot;z-meta z-block z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-php&quot;&gt;}&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;So the last step is to define which class will be resolved when we inject our &lt;code&gt;UserRepository&lt;&#x2F;code&gt; interface, and finally,
our &lt;code&gt;UserCreator&lt;&#x2F;code&gt; will be like:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;php source&quot; class=&quot;language-php source z-code&quot;&gt;&lt;code class=&quot;language-php source&quot; data-lang=&quot;php source&quot;&gt;&lt;span class=&quot;z-source z-php&quot;&gt;&lt;span class=&quot;z-meta z-class z-php&quot;&gt;&lt;span class=&quot;z-storage z-modifier z-abstract z-php&quot;&gt;final &lt;&#x2F;span&gt;&lt;span class=&quot;z-storage z-type z-class z-php&quot;&gt;class&lt;&#x2F;span&gt; &lt;span class=&quot;z-entity z-name z-class z-php&quot;&gt;UserCreator&lt;&#x2F;span&gt;
&lt;span class=&quot;z-meta z-block z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-php&quot;&gt;{&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-class z-php&quot;&gt;&lt;span class=&quot;z-meta z-block z-php&quot;&gt;
    &lt;span class=&quot;z-storage z-modifier z-php&quot;&gt;public&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-function z-php&quot;&gt;&lt;span class=&quot;z-storage z-type z-function z-php&quot;&gt;function&lt;&#x2F;span&gt; &lt;span class=&quot;z-entity z-name z-function z-php&quot;&gt;&lt;span class=&quot;z-support z-function z-magic z-php&quot;&gt;__construct&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-parameters z-php&quot;&gt;&lt;span class=&quot;z-meta z-group z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-php&quot;&gt;(&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-parameters z-php&quot;&gt;&lt;span class=&quot;z-meta z-group z-php&quot;&gt;
        &lt;span class=&quot;z-meta z-path z-php&quot;&gt;&lt;span class=&quot;z-support z-class z-php&quot;&gt;private&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-path z-php&quot;&gt;&lt;span class=&quot;z-support z-class z-php&quot;&gt;UserRepository&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-variable z-parameter z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-variable z-php&quot;&gt;$&lt;&#x2F;span&gt;userRepository&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-php&quot;&gt;,&lt;&#x2F;span&gt;
    &lt;span class=&quot;z-punctuation z-section z-group z-end z-php&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-php&quot;&gt; &lt;span class=&quot;z-meta z-block z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-begin z-php&quot;&gt;{&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-php&quot;&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-php&quot;&gt;&lt;span class=&quot;z-meta z-block z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-end z-php&quot;&gt;}&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;

    &lt;span class=&quot;z-storage z-modifier z-php&quot;&gt;public&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-function z-php&quot;&gt;&lt;span class=&quot;z-storage z-type z-function z-php&quot;&gt;function&lt;&#x2F;span&gt; &lt;span class=&quot;z-entity z-name z-function z-php&quot;&gt;create&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-parameters z-php&quot;&gt;&lt;span class=&quot;z-meta z-group z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-php&quot;&gt;(&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-parameters z-php&quot;&gt;&lt;span class=&quot;z-meta z-group z-php&quot;&gt;&lt;span class=&quot;z-meta z-path z-php&quot;&gt;&lt;span class=&quot;z-support z-class z-php&quot;&gt;UserInformation&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-variable z-parameter z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-variable z-php&quot;&gt;$&lt;&#x2F;span&gt;userInfo&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-php&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-return-type z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-separator z-php&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-path z-php&quot;&gt;&lt;span class=&quot;z-support z-class z-php&quot;&gt;void&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
    &lt;span class=&quot;z-meta z-block z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-begin z-php&quot;&gt;{&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-php&quot;&gt;&lt;span class=&quot;z-meta z-block z-php&quot;&gt;
        &lt;span class=&quot;z-variable z-language z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-variable z-php&quot;&gt;$&lt;&#x2F;span&gt;this&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-accessor z-arrow z-php&quot;&gt;-&amp;gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-variable z-other z-member z-php&quot;&gt;userRepository&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-method z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-accessor z-arrow z-php&quot;&gt;-&amp;gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-variable z-function z-php&quot;&gt;save&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-php&quot;&gt;&lt;span class=&quot;z-meta z-group z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-php&quot;&gt;(&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-php&quot;&gt;&lt;span class=&quot;z-meta z-group z-php&quot;&gt;&lt;span class=&quot;z-variable z-other z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-variable z-php&quot;&gt;$&lt;&#x2F;span&gt;userInfo&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-php&quot;&gt;&lt;span class=&quot;z-meta z-group z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-php&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-terminator z-expression z-php&quot;&gt;;&lt;&#x2F;span&gt;
    &lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-php&quot;&gt;&lt;span class=&quot;z-meta z-block z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-end z-php&quot;&gt;}&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-class z-php&quot;&gt;&lt;span class=&quot;z-meta z-block z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-php&quot;&gt;}&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Regarding tests, with the current &lt;code&gt;UserCreator&lt;&#x2F;code&gt; implementation, it would be really simple to add a unit test, but it
won‚Äôt make sense as the saving logic would be mocked, and the test would provide no value at all.&lt;br&gt;
A functional test where we check the user and the address was actually persisted in the database properly makes more
sense, but I will skip the test as it would add unnecessary complexity to the post üôÇ&lt;&#x2F;p&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>Testing with Test Doubles?</title>
		<published>2020-06-11T00:00:00+00:00</published>
		<updated>2020-06-11T00:00:00+00:00</updated>
		<link rel="alternate" href="https://jesusvalera.dev/testing-with-test-doubles/" type="text/html"/>
		<id>https://jesusvalera.dev/testing-with-test-doubles/</id>
		<content type="html">&lt;img alt=&quot;parliament-budapest&quot; src=&quot;&#x2F;images&#x2F;2020-06-11&#x2F;1.png&quot; style=&quot;width: 100%&quot;&#x2F;&gt;
&lt;h2 id=&quot;test-doubles&quot;&gt;Test Doubles&lt;&#x2F;h2&gt;
&lt;p&gt;A Test Double is an object that can stand-in for a real object in a test, similar to how a stunt double stands in for an
actor in a movie.&lt;&#x2F;p&gt;
&lt;p&gt;As I wrote in &lt;a href=&quot;&#x2F;the-importance-of-tests-in-our-software&quot;&gt;‚ÄúThe importance of the Tests in our Software‚Äù&lt;&#x2F;a&gt;, there are
several types of tests. They are also known as Test Doubles instead of ‚ÄúMocks‚Äù.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;the-five-types-of-test-doubles-are&quot;&gt;The five types of Test Doubles are:&lt;&#x2F;h3&gt;
&lt;img alt=&quot;test-types&quot; src=&quot;&#x2F;images&#x2F;2020-06-11&#x2F;2.png&quot; style=&quot;width: 90%&quot;&#x2F;&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Dummy&lt;&#x2F;strong&gt;: It is used as a placeholder when an argument needs to be filled in.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;Stub&lt;&#x2F;strong&gt;: It provides fake data to the SUT (System Under Test).&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;Spy&lt;&#x2F;strong&gt;: It records information about how the class is being used.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;Mock&lt;&#x2F;strong&gt;: It defines an expectation of how it will be used. It will cause failure if the expectation isn‚Äôt met.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;Fake&lt;&#x2F;strong&gt;: It is an actual implementation of the contract but is unsuitable for production.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;images&#x2F;2020-06-11&#x2F;3.png&quot; alt=&quot;bodo-istvan&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;The snippets are a pseudo-language based on a mix of PHP &amp;amp; Java.&lt;br&gt;
The idea is to make it understandable to everyone familiar with OOP.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;h2 id=&quot;dummy&quot;&gt;Dummy&lt;&#x2F;h2&gt;
&lt;p&gt;The dummies are objects that our SUT depends on, but they are never used. We don‚Äôt care about them because they are
irrelevant to the test scope.&lt;&#x2F;p&gt;
&lt;p&gt;Let‚Äôs imagine we have a service with a dependency that is irrelevant in the current test. We can perform something
similar to the following snippet:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;java&quot; class=&quot;language-java z-code&quot;&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;z-source z-java&quot;&gt;&lt;span class=&quot;z-meta z-class z-java&quot;&gt;&lt;span class=&quot;z-storage z-modifier z-java&quot;&gt;final&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-class z-identifier z-java&quot;&gt;&lt;span class=&quot;z-storage z-type z-java&quot;&gt;class&lt;&#x2F;span&gt; &lt;span class=&quot;z-entity z-name z-class z-java&quot;&gt;Service&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;span class=&quot;z-meta z-class z-body z-java&quot;&gt;&lt;span class=&quot;z-meta z-block z-java&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-begin z-java&quot;&gt;{&lt;&#x2F;span&gt;
    &lt;span class=&quot;z-storage z-modifier z-java&quot;&gt;public&lt;&#x2F;span&gt; &lt;span class=&quot;z-storage z-modifier z-java&quot;&gt;final&lt;&#x2F;span&gt; &lt;span class=&quot;z-support z-class z-java&quot;&gt;String&lt;&#x2F;span&gt; &lt;span class=&quot;z-entity z-name z-constant z-java&quot;&gt;OUTPUT&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-assignment z-rhs z-java&quot;&gt;&lt;span class=&quot;z-keyword z-operator z-assignment z-java&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-quoted z-single z-java&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-java&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;something&lt;span class=&quot;z-punctuation z-definition z-string z-end z-java&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-terminator z-java&quot;&gt;;&lt;&#x2F;span&gt;

    &lt;span class=&quot;z-storage z-modifier z-java&quot;&gt;public&lt;&#x2F;span&gt; function &lt;span class=&quot;z-meta z-method z-java&quot;&gt;&lt;span class=&quot;z-meta z-method z-identifier z-java&quot;&gt;&lt;span class=&quot;z-entity z-name z-function z-java&quot;&gt;format&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-method z-parameters z-java&quot;&gt;&lt;span class=&quot;z-meta z-parens z-java&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-parens z-begin z-java&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-invalid z-illegal z-missing-parameter-end&quot;&gt;?&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-support z-class z-java&quot;&gt;Dependency&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-field z-java&quot;&gt;dependency&lt;&#x2F;span&gt;): &lt;span class=&quot;z-support z-class z-java&quot;&gt;String&lt;&#x2F;span&gt;
    &lt;span class=&quot;z-meta z-static z-body z-java&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-begin z-java&quot;&gt;{&lt;&#x2F;span&gt;
        &lt;span class=&quot;z-comment z-line z-double-slash z-java&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-comment z-java&quot;&gt;&#x2F;&#x2F;&lt;&#x2F;span&gt; &amp;#39;dependency&amp;#39; won&amp;#39;t interfere in the expected result.
&lt;&#x2F;span&gt;        &lt;span class=&quot;z-keyword z-control z-flow z-return z-java&quot;&gt;return&lt;&#x2F;span&gt; self&lt;span class=&quot;z-punctuation z-accessor z-double-colon z-java&quot;&gt;::&lt;&#x2F;span&gt;&lt;span class=&quot;z-variable z-function z-reference z-java&quot;&gt;OUTPUT&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-terminator z-java&quot;&gt;;&lt;&#x2F;span&gt;
    &lt;span class=&quot;z-punctuation z-section z-block z-end z-java&quot;&gt;}&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;

&lt;span class=&quot;z-punctuation z-section z-block z-end z-java&quot;&gt;}&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;

&lt;span class=&quot;z-meta z-class z-java&quot;&gt;&lt;span class=&quot;z-storage z-modifier z-java&quot;&gt;final&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-class z-identifier z-java&quot;&gt;&lt;span class=&quot;z-storage z-type z-java&quot;&gt;class&lt;&#x2F;span&gt; &lt;span class=&quot;z-entity z-name z-class z-java&quot;&gt;ServiceTest&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-class z-extends z-java&quot;&gt;&lt;span class=&quot;z-keyword z-declaration z-extends z-java&quot;&gt;extends&lt;&#x2F;span&gt; &lt;span class=&quot;z-entity z-other z-inherited-class z-java&quot;&gt;TestCase&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-class z-body z-java&quot;&gt;&lt;span class=&quot;z-meta z-block z-java&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-begin z-java&quot;&gt;{&lt;&#x2F;span&gt;
    &lt;span class=&quot;z-storage z-modifier z-java&quot;&gt;public&lt;&#x2F;span&gt; function &lt;span class=&quot;z-meta z-method z-java&quot;&gt;&lt;span class=&quot;z-meta z-method z-identifier z-java&quot;&gt;&lt;span class=&quot;z-entity z-name z-function z-java&quot;&gt;testFormat&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-method z-parameters z-java&quot;&gt;&lt;span class=&quot;z-meta z-parens z-java&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-parens z-begin z-java&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-parens z-end z-java&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;: &lt;span class=&quot;z-meta z-method z-java&quot;&gt;&lt;span class=&quot;z-storage z-type z-void z-java&quot;&gt;void&lt;&#x2F;span&gt;
    &lt;span class=&quot;z-meta z-method z-java&quot;&gt;&lt;span class=&quot;z-meta z-method z-body z-java&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-begin z-java&quot;&gt;{&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-method z-java&quot;&gt;&lt;span class=&quot;z-meta z-method z-body z-java&quot;&gt;
        &lt;span class=&quot;z-comment z-line z-double-slash z-java&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-comment z-java&quot;&gt;&#x2F;&#x2F;&lt;&#x2F;span&gt; Notice as the parameter is irrelevant.
&lt;&#x2F;span&gt;        &lt;span class=&quot;z-support z-class z-java&quot;&gt;String&lt;&#x2F;span&gt; result &lt;span class=&quot;z-meta z-assignment z-rhs z-java&quot;&gt;&lt;span class=&quot;z-keyword z-operator z-assignment z-java&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-parens z-java&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-parens z-begin z-java&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-instantiation z-java&quot;&gt;&lt;span class=&quot;z-keyword z-other z-storage z-new z-java&quot;&gt;new&lt;&#x2F;span&gt; &lt;span class=&quot;z-support z-class z-java&quot;&gt;Service&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-parens z-constructor-arguments z-java&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-parens z-begin z-java&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-parens z-end z-java&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-parens z-end z-java&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-accessor z-dot z-java&quot;&gt;.&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-java&quot;&gt;&lt;span class=&quot;z-variable z-function z-java&quot;&gt;format&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-parens z-begin z-java&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-constant z-language z-java&quot;&gt;null&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-parens z-end z-java&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-terminator z-java&quot;&gt;;&lt;&#x2F;span&gt;
        self&lt;span class=&quot;z-punctuation z-accessor z-dot z-java&quot;&gt;.&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-java&quot;&gt;&lt;span class=&quot;z-variable z-function z-java&quot;&gt;assertSame&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-parens z-begin z-java&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-support z-class z-java&quot;&gt;Service&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-accessor z-double-colon z-java&quot;&gt;::&lt;&#x2F;span&gt;&lt;span class=&quot;z-variable z-function z-reference z-java&quot;&gt;OUTPUT&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-comma z-java&quot;&gt;,&lt;&#x2F;span&gt; result&lt;span class=&quot;z-punctuation z-section z-parens z-end z-java&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-terminator z-java&quot;&gt;;&lt;&#x2F;span&gt;
    &lt;span class=&quot;z-punctuation z-section z-block z-end z-java&quot;&gt;}&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;span class=&quot;z-punctuation z-section z-block z-end z-java&quot;&gt;}&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h2 id=&quot;stub&quot;&gt;Stub&lt;&#x2F;h2&gt;
&lt;p&gt;A stub is an object which returns fake data.&lt;&#x2F;p&gt;
&lt;p&gt;Let‚Äôs imagine our service depends on a user model, then the service does something, and finally, it returns the user‚Äôs
UUID.
We can create a stub object with fake values to assert the service works as expected.&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;java&quot; class=&quot;language-java z-code&quot;&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;z-source z-java&quot;&gt;&lt;span class=&quot;z-meta z-class z-java&quot;&gt;&lt;span class=&quot;z-storage z-modifier z-java&quot;&gt;final&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-class z-identifier z-java&quot;&gt;&lt;span class=&quot;z-storage z-type z-java&quot;&gt;class&lt;&#x2F;span&gt; &lt;span class=&quot;z-entity z-name z-class z-java&quot;&gt;Service&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;span class=&quot;z-meta z-class z-body z-java&quot;&gt;&lt;span class=&quot;z-meta z-block z-java&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-begin z-java&quot;&gt;{&lt;&#x2F;span&gt;
    &lt;span class=&quot;z-storage z-modifier z-java&quot;&gt;public&lt;&#x2F;span&gt; function &lt;span class=&quot;z-meta z-method z-java&quot;&gt;&lt;span class=&quot;z-meta z-method z-identifier z-java&quot;&gt;&lt;span class=&quot;z-entity z-name z-function z-java&quot;&gt;doSomething&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-method z-parameters z-java&quot;&gt;&lt;span class=&quot;z-meta z-parens z-java&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-parens z-begin z-java&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-support z-class z-java&quot;&gt;UserModelInterface&lt;&#x2F;span&gt; &lt;span class=&quot;z-variable z-parameter z-java&quot;&gt;user&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-parens z-end z-java&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;: &lt;span class=&quot;z-support z-class z-java&quot;&gt;Int&lt;&#x2F;span&gt;
    &lt;span class=&quot;z-meta z-static z-body z-java&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-begin z-java&quot;&gt;{&lt;&#x2F;span&gt;
        &lt;span class=&quot;z-comment z-block z-java&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-comment z-java&quot;&gt;&#x2F;*&lt;&#x2F;span&gt; Do things &lt;span class=&quot;z-punctuation z-definition z-comment z-java&quot;&gt;*&#x2F;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
        &lt;span class=&quot;z-keyword z-control z-flow z-return z-java&quot;&gt;return&lt;&#x2F;span&gt; user&lt;span class=&quot;z-punctuation z-accessor z-dot z-java&quot;&gt;.&lt;&#x2F;span&gt;uuid&lt;span class=&quot;z-punctuation z-terminator z-java&quot;&gt;;&lt;&#x2F;span&gt;
    &lt;span class=&quot;z-punctuation z-section z-block z-end z-java&quot;&gt;}&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;span class=&quot;z-punctuation z-section z-block z-end z-java&quot;&gt;}&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;To test this service, we can create a stub of the user and check if the response is what we were expecting.&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;java&quot; class=&quot;language-java z-code&quot;&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;z-source z-java&quot;&gt;&lt;span class=&quot;z-meta z-class z-java&quot;&gt;&lt;span class=&quot;z-storage z-modifier z-java&quot;&gt;final&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-class z-identifier z-java&quot;&gt;&lt;span class=&quot;z-storage z-type z-java&quot;&gt;class&lt;&#x2F;span&gt; &lt;span class=&quot;z-entity z-name z-class z-java&quot;&gt;ServiceTest&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-class z-extends z-java&quot;&gt;&lt;span class=&quot;z-keyword z-declaration z-extends z-java&quot;&gt;extends&lt;&#x2F;span&gt; &lt;span class=&quot;z-entity z-other z-inherited-class z-java&quot;&gt;TestCase&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-class z-body z-java&quot;&gt;&lt;span class=&quot;z-meta z-block z-java&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-begin z-java&quot;&gt;{&lt;&#x2F;span&gt;
    &lt;span class=&quot;z-storage z-modifier z-java&quot;&gt;public&lt;&#x2F;span&gt; function &lt;span class=&quot;z-meta z-method z-java&quot;&gt;&lt;span class=&quot;z-meta z-method z-identifier z-java&quot;&gt;&lt;span class=&quot;z-entity z-name z-function z-java&quot;&gt;testDoSomething&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-method z-parameters z-java&quot;&gt;&lt;span class=&quot;z-meta z-parens z-java&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-parens z-begin z-java&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-parens z-end z-java&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;: &lt;span class=&quot;z-meta z-method z-java&quot;&gt;&lt;span class=&quot;z-storage z-type z-void z-java&quot;&gt;void&lt;&#x2F;span&gt;
    &lt;span class=&quot;z-meta z-method z-java&quot;&gt;&lt;span class=&quot;z-meta z-method z-body z-java&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-begin z-java&quot;&gt;{&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-method z-java&quot;&gt;&lt;span class=&quot;z-meta z-method z-body z-java&quot;&gt;
        &lt;span class=&quot;z-comment z-line z-double-slash z-java&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-comment z-java&quot;&gt;&#x2F;&#x2F;&lt;&#x2F;span&gt; The service needs a implementation from `UserModelInterface`.
&lt;&#x2F;span&gt;        &lt;span class=&quot;z-support z-class z-java&quot;&gt;String&lt;&#x2F;span&gt; uuid &lt;span class=&quot;z-meta z-assignment z-rhs z-java&quot;&gt;&lt;span class=&quot;z-keyword z-operator z-assignment z-java&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-parens z-java&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-parens z-begin z-java&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-instantiation z-java&quot;&gt;&lt;span class=&quot;z-keyword z-other z-storage z-new z-java&quot;&gt;new&lt;&#x2F;span&gt; &lt;span class=&quot;z-support z-class z-java&quot;&gt;Service&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-parens z-constructor-arguments z-java&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-parens z-begin z-java&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-parens z-end z-java&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-parens z-end z-java&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-accessor z-dot z-java&quot;&gt;.&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-java&quot;&gt;&lt;span class=&quot;z-variable z-function z-java&quot;&gt;doSomething&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-parens z-begin z-java&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-instantiation z-java&quot;&gt;&lt;span class=&quot;z-keyword z-other z-storage z-new z-java&quot;&gt;new&lt;&#x2F;span&gt; &lt;span class=&quot;z-support z-class z-java&quot;&gt;UserStub&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-parens z-constructor-arguments z-java&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-parens z-begin z-java&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-parens z-end z-java&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-parens z-end z-java&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-terminator z-java&quot;&gt;;&lt;&#x2F;span&gt;
        self&lt;span class=&quot;z-punctuation z-accessor z-dot z-java&quot;&gt;.&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-java&quot;&gt;&lt;span class=&quot;z-variable z-function z-java&quot;&gt;assertStringContainsString&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-parens z-begin z-java&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-string z-quoted z-single z-java&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-java&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;0000-000-000-00001&lt;span class=&quot;z-punctuation z-definition z-string z-end z-java&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-comma z-java&quot;&gt;,&lt;&#x2F;span&gt; uuid&lt;span class=&quot;z-punctuation z-section z-parens z-end z-java&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-terminator z-java&quot;&gt;;&lt;&#x2F;span&gt;
    &lt;span class=&quot;z-punctuation z-section z-block z-end z-java&quot;&gt;}&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;span class=&quot;z-punctuation z-section z-block z-end z-java&quot;&gt;}&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;

&lt;span class=&quot;z-meta z-class z-java&quot;&gt;&lt;span class=&quot;z-meta z-class z-identifier z-java&quot;&gt;&lt;span class=&quot;z-storage z-type z-java&quot;&gt;interface&lt;&#x2F;span&gt; &lt;span class=&quot;z-entity z-name z-class z-java&quot;&gt;UserModelInterface&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;span class=&quot;z-meta z-class z-body z-java&quot;&gt;&lt;span class=&quot;z-meta z-block z-java&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-begin z-java&quot;&gt;{&lt;&#x2F;span&gt;
    &lt;span class=&quot;z-storage z-modifier z-java&quot;&gt;public&lt;&#x2F;span&gt; function &lt;span class=&quot;z-meta z-method z-java&quot;&gt;&lt;span class=&quot;z-meta z-method z-identifier z-java&quot;&gt;&lt;span class=&quot;z-entity z-name z-function z-java&quot;&gt;getUuid&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-method z-parameters z-java&quot;&gt;&lt;span class=&quot;z-meta z-parens z-java&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-parens z-begin z-java&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-parens z-end z-java&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;: &lt;span class=&quot;z-support z-class z-java&quot;&gt;String&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-terminator z-java&quot;&gt;;&lt;&#x2F;span&gt;
&lt;span class=&quot;z-punctuation z-section z-block z-end z-java&quot;&gt;}&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;

&lt;span class=&quot;z-meta z-class z-java&quot;&gt;&lt;span class=&quot;z-storage z-modifier z-java&quot;&gt;final&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-class z-identifier z-java&quot;&gt;&lt;span class=&quot;z-storage z-type z-java&quot;&gt;class&lt;&#x2F;span&gt; &lt;span class=&quot;z-entity z-name z-class z-java&quot;&gt;UserStub&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-class z-implements z-java&quot;&gt;&lt;span class=&quot;z-keyword z-declaration z-implements z-java&quot;&gt;implements&lt;&#x2F;span&gt; &lt;span class=&quot;z-entity z-other z-inherited-class z-java&quot;&gt;UserModelInterface&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-class z-body z-java&quot;&gt;&lt;span class=&quot;z-meta z-block z-java&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-begin z-java&quot;&gt;{&lt;&#x2F;span&gt;
    &lt;span class=&quot;z-storage z-modifier z-java&quot;&gt;public&lt;&#x2F;span&gt; function &lt;span class=&quot;z-meta z-method z-java&quot;&gt;&lt;span class=&quot;z-meta z-method z-identifier z-java&quot;&gt;&lt;span class=&quot;z-entity z-name z-function z-java&quot;&gt;getUuid&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-method z-parameters z-java&quot;&gt;&lt;span class=&quot;z-meta z-parens z-java&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-parens z-begin z-java&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-parens z-end z-java&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;: &lt;span class=&quot;z-support z-class z-java&quot;&gt;String&lt;&#x2F;span&gt;
    &lt;span class=&quot;z-meta z-static z-body z-java&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-begin z-java&quot;&gt;{&lt;&#x2F;span&gt;
        &lt;span class=&quot;z-keyword z-control z-flow z-return z-java&quot;&gt;return&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-quoted z-single z-java&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-java&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;0000-000-000-00001&lt;span class=&quot;z-punctuation z-definition z-string z-end z-java&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-terminator z-java&quot;&gt;;&lt;&#x2F;span&gt;
    &lt;span class=&quot;z-punctuation z-section z-block z-end z-java&quot;&gt;}&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;span class=&quot;z-punctuation z-section z-block z-end z-java&quot;&gt;}&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h2 id=&quot;spy&quot;&gt;Spy&lt;&#x2F;h2&gt;
&lt;p&gt;A test spy is an object capable of capturing indirect output and providing indirect input as needed. The indirect output
is something we cannot directly observe.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;We can achieve that by extending the original class and saving the function params as class arguments.&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;In the following snippet, we can know exactly how many times the log() method has been called, as well as the content of
the messages.
The point of this spy is to have much more knowledge of the internal object state in exchange for deeper coupling, which
could be problematic in the future because it makes our tests more fragile.&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;java&quot; class=&quot;language-java z-code&quot;&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;z-source z-java&quot;&gt;&lt;span class=&quot;z-meta z-class z-java&quot;&gt;&lt;span class=&quot;z-meta z-class z-identifier z-java&quot;&gt;&lt;span class=&quot;z-storage z-type z-java&quot;&gt;interface&lt;&#x2F;span&gt; &lt;span class=&quot;z-entity z-name z-class z-java&quot;&gt;LoggerInterface&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;span class=&quot;z-meta z-class z-body z-java&quot;&gt;&lt;span class=&quot;z-meta z-block z-java&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-begin z-java&quot;&gt;{&lt;&#x2F;span&gt;
    &lt;span class=&quot;z-storage z-modifier z-java&quot;&gt;public&lt;&#x2F;span&gt; function &lt;span class=&quot;z-meta z-method z-java&quot;&gt;&lt;span class=&quot;z-meta z-method z-identifier z-java&quot;&gt;&lt;span class=&quot;z-entity z-name z-function z-java&quot;&gt;log&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-method z-parameters z-java&quot;&gt;&lt;span class=&quot;z-meta z-parens z-java&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-parens z-begin z-java&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-support z-class z-java&quot;&gt;String&lt;&#x2F;span&gt; &lt;span class=&quot;z-variable z-parameter z-java&quot;&gt;message&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-parens z-end z-java&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;: &lt;span class=&quot;z-meta z-method z-java&quot;&gt;&lt;span class=&quot;z-storage z-type z-void z-java&quot;&gt;void&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-terminator z-java&quot;&gt;;&lt;&#x2F;span&gt;
&lt;span class=&quot;z-punctuation z-section z-block z-end z-java&quot;&gt;}&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;

&lt;span class=&quot;z-meta z-class z-java&quot;&gt;&lt;span class=&quot;z-storage z-modifier z-java&quot;&gt;final&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-class z-identifier z-java&quot;&gt;&lt;span class=&quot;z-storage z-type z-java&quot;&gt;class&lt;&#x2F;span&gt; &lt;span class=&quot;z-entity z-name z-class z-java&quot;&gt;LoggerSpy&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-class z-implements z-java&quot;&gt;&lt;span class=&quot;z-keyword z-declaration z-implements z-java&quot;&gt;implements&lt;&#x2F;span&gt; &lt;span class=&quot;z-entity z-other z-inherited-class z-java&quot;&gt;LoggerInterface&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-class z-body z-java&quot;&gt;&lt;span class=&quot;z-meta z-block z-java&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-begin z-java&quot;&gt;{&lt;&#x2F;span&gt;
    &lt;span class=&quot;z-storage z-modifier z-java&quot;&gt;public&lt;&#x2F;span&gt; &lt;span class=&quot;z-support z-class z-java&quot;&gt;Array&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-generic z-java&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-generic z-begin z-java&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-support z-class z-java&quot;&gt;String&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-definition z-generic z-end z-java&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-field z-java&quot;&gt;messages&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-assignment z-rhs z-java&quot;&gt;&lt;span class=&quot;z-keyword z-operator z-assignment z-java&quot;&gt;=&lt;&#x2F;span&gt; []&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-terminator z-java&quot;&gt;;&lt;&#x2F;span&gt;

    &lt;span class=&quot;z-storage z-modifier z-java&quot;&gt;public&lt;&#x2F;span&gt; function &lt;span class=&quot;z-meta z-method z-java&quot;&gt;&lt;span class=&quot;z-meta z-method z-identifier z-java&quot;&gt;&lt;span class=&quot;z-entity z-name z-function z-java&quot;&gt;log&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-method z-parameters z-java&quot;&gt;&lt;span class=&quot;z-meta z-parens z-java&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-parens z-begin z-java&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-support z-class z-java&quot;&gt;String&lt;&#x2F;span&gt; &lt;span class=&quot;z-variable z-parameter z-java&quot;&gt;message&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-parens z-end z-java&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;: &lt;span class=&quot;z-meta z-method z-java&quot;&gt;&lt;span class=&quot;z-storage z-type z-void z-java&quot;&gt;void&lt;&#x2F;span&gt;
    &lt;span class=&quot;z-meta z-method z-java&quot;&gt;&lt;span class=&quot;z-meta z-method z-body z-java&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-begin z-java&quot;&gt;{&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-method z-java&quot;&gt;&lt;span class=&quot;z-meta z-method z-body z-java&quot;&gt;
        &lt;span class=&quot;z-variable z-language z-java&quot;&gt;this&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-accessor z-dot z-java&quot;&gt;.&lt;&#x2F;span&gt;messages&lt;span class=&quot;z-punctuation z-accessor z-dot z-java&quot;&gt;.&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-java&quot;&gt;&lt;span class=&quot;z-variable z-function z-java&quot;&gt;add&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-parens z-begin z-java&quot;&gt;(&lt;&#x2F;span&gt;message&lt;span class=&quot;z-punctuation z-section z-parens z-end z-java&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-terminator z-java&quot;&gt;;&lt;&#x2F;span&gt;
    &lt;span class=&quot;z-punctuation z-section z-block z-end z-java&quot;&gt;}&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;span class=&quot;z-punctuation z-section z-block z-end z-java&quot;&gt;}&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;

&lt;span class=&quot;z-meta z-class z-java&quot;&gt;&lt;span class=&quot;z-storage z-modifier z-java&quot;&gt;final&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-class z-identifier z-java&quot;&gt;&lt;span class=&quot;z-storage z-type z-java&quot;&gt;class&lt;&#x2F;span&gt; &lt;span class=&quot;z-entity z-name z-class z-java&quot;&gt;UserNotifier&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;span class=&quot;z-meta z-class z-body z-java&quot;&gt;&lt;span class=&quot;z-meta z-block z-java&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-begin z-java&quot;&gt;{&lt;&#x2F;span&gt;
    &lt;span class=&quot;z-storage z-modifier z-java&quot;&gt;public&lt;&#x2F;span&gt; function &lt;span class=&quot;z-meta z-method z-java&quot;&gt;&lt;span class=&quot;z-meta z-method z-identifier z-java&quot;&gt;&lt;span class=&quot;z-entity z-name z-function z-java&quot;&gt;__construct&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-method z-parameters z-java&quot;&gt;&lt;span class=&quot;z-meta z-parens z-java&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-parens z-begin z-java&quot;&gt;(&lt;&#x2F;span&gt;
        &lt;span class=&quot;z-variable z-parameter z-java&quot;&gt;private&lt;&#x2F;span&gt; &lt;span class=&quot;z-support z-class z-java&quot;&gt;LoggerInterface&lt;&#x2F;span&gt; &lt;span class=&quot;z-variable z-parameter z-java&quot;&gt;logger&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-comma z-java&quot;&gt;,&lt;&#x2F;span&gt;
    &lt;span class=&quot;z-punctuation z-section z-parens z-end z-java&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-method z-java&quot;&gt;&lt;span class=&quot;z-meta z-method z-body z-java&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-begin z-java&quot;&gt;{&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-method z-java&quot;&gt;&lt;span class=&quot;z-meta z-method z-body z-java&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-end z-java&quot;&gt;}&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;

    &lt;span class=&quot;z-storage z-modifier z-java&quot;&gt;public&lt;&#x2F;span&gt; function &lt;span class=&quot;z-meta z-method z-java&quot;&gt;&lt;span class=&quot;z-meta z-method z-identifier z-java&quot;&gt;&lt;span class=&quot;z-entity z-name z-function z-java&quot;&gt;registerUser&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-method z-parameters z-java&quot;&gt;&lt;span class=&quot;z-meta z-parens z-java&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-parens z-begin z-java&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-support z-class z-java&quot;&gt;UserModelInterface&lt;&#x2F;span&gt; &lt;span class=&quot;z-variable z-parameter z-java&quot;&gt;user&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-parens z-end z-java&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;: &lt;span class=&quot;z-meta z-method z-java&quot;&gt;&lt;span class=&quot;z-storage z-type z-void z-java&quot;&gt;void&lt;&#x2F;span&gt;
    &lt;span class=&quot;z-meta z-method z-java&quot;&gt;&lt;span class=&quot;z-meta z-method z-body z-java&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-begin z-java&quot;&gt;{&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-method z-java&quot;&gt;&lt;span class=&quot;z-meta z-method z-body z-java&quot;&gt;
        &lt;span class=&quot;z-variable z-language z-java&quot;&gt;this&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-accessor z-dot z-java&quot;&gt;.&lt;&#x2F;span&gt;logger&lt;span class=&quot;z-punctuation z-accessor z-dot z-java&quot;&gt;.&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-java&quot;&gt;&lt;span class=&quot;z-variable z-function z-java&quot;&gt;log&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-parens z-begin z-java&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-string z-quoted z-double z-java&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-java&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;Notifying the user: {user.name()}&lt;span class=&quot;z-punctuation z-definition z-string z-end z-java&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-parens z-end z-java&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-terminator z-java&quot;&gt;;&lt;&#x2F;span&gt;
        &lt;span class=&quot;z-comment z-line z-double-slash z-java&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-comment z-java&quot;&gt;&#x2F;&#x2F;&lt;&#x2F;span&gt; ...
&lt;&#x2F;span&gt;    &lt;span class=&quot;z-punctuation z-section z-block z-end z-java&quot;&gt;}&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;span class=&quot;z-punctuation z-section z-block z-end z-java&quot;&gt;}&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;The following would be the implementation of the spy in a test:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;java&quot; class=&quot;language-java z-code&quot;&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;z-source z-java&quot;&gt;&lt;span class=&quot;z-meta z-class z-java&quot;&gt;&lt;span class=&quot;z-storage z-modifier z-java&quot;&gt;final&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-class z-identifier z-java&quot;&gt;&lt;span class=&quot;z-storage z-type z-java&quot;&gt;class&lt;&#x2F;span&gt; &lt;span class=&quot;z-entity z-name z-class z-java&quot;&gt;UserNotifierTest&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-class z-extends z-java&quot;&gt;&lt;span class=&quot;z-keyword z-declaration z-extends z-java&quot;&gt;extends&lt;&#x2F;span&gt; &lt;span class=&quot;z-entity z-other z-inherited-class z-java&quot;&gt;TestCase&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-class z-body z-java&quot;&gt;&lt;span class=&quot;z-meta z-block z-java&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-begin z-java&quot;&gt;{&lt;&#x2F;span&gt;
    &lt;span class=&quot;z-storage z-modifier z-java&quot;&gt;public&lt;&#x2F;span&gt; function &lt;span class=&quot;z-meta z-method z-java&quot;&gt;&lt;span class=&quot;z-meta z-method z-identifier z-java&quot;&gt;&lt;span class=&quot;z-entity z-name z-function z-java&quot;&gt;testLogMessage&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-method z-parameters z-java&quot;&gt;&lt;span class=&quot;z-meta z-parens z-java&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-parens z-begin z-java&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-parens z-end z-java&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;: &lt;span class=&quot;z-meta z-method z-java&quot;&gt;&lt;span class=&quot;z-storage z-type z-void z-java&quot;&gt;void&lt;&#x2F;span&gt;
    &lt;span class=&quot;z-meta z-method z-java&quot;&gt;&lt;span class=&quot;z-meta z-method z-body z-java&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-begin z-java&quot;&gt;{&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-method z-java&quot;&gt;&lt;span class=&quot;z-meta z-method z-body z-java&quot;&gt;
        &lt;span class=&quot;z-support z-class z-java&quot;&gt;LoggerSpy&lt;&#x2F;span&gt; logger &lt;span class=&quot;z-meta z-assignment z-rhs z-java&quot;&gt;&lt;span class=&quot;z-keyword z-operator z-assignment z-java&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-instantiation z-java&quot;&gt;&lt;span class=&quot;z-keyword z-other z-storage z-new z-java&quot;&gt;new&lt;&#x2F;span&gt; &lt;span class=&quot;z-support z-class z-java&quot;&gt;LoggerSpy&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-parens z-constructor-arguments z-java&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-parens z-begin z-java&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-parens z-end z-java&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-terminator z-java&quot;&gt;;&lt;&#x2F;span&gt;
        &lt;span class=&quot;z-support z-class z-java&quot;&gt;UserNotifier&lt;&#x2F;span&gt; notifier &lt;span class=&quot;z-meta z-assignment z-rhs z-java&quot;&gt;&lt;span class=&quot;z-keyword z-operator z-assignment z-java&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-instantiation z-java&quot;&gt;&lt;span class=&quot;z-keyword z-other z-storage z-new z-java&quot;&gt;new&lt;&#x2F;span&gt; &lt;span class=&quot;z-support z-class z-java&quot;&gt;UserNotifier&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-parens z-constructor-arguments z-java&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-parens z-begin z-java&quot;&gt;(&lt;&#x2F;span&gt;logger&lt;span class=&quot;z-punctuation z-section z-parens z-end z-java&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-terminator z-java&quot;&gt;;&lt;&#x2F;span&gt;
    
        &lt;span class=&quot;z-support z-class z-java&quot;&gt;User&lt;&#x2F;span&gt; user &lt;span class=&quot;z-meta z-assignment z-rhs z-java&quot;&gt;&lt;span class=&quot;z-keyword z-operator z-assignment z-java&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-instantiation z-java&quot;&gt;&lt;span class=&quot;z-keyword z-other z-storage z-new z-java&quot;&gt;new&lt;&#x2F;span&gt; &lt;span class=&quot;z-support z-class z-java&quot;&gt;User&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-parens z-constructor-arguments z-java&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-parens z-begin z-java&quot;&gt;(&lt;&#x2F;span&gt;name&lt;span class=&quot;z-keyword z-operator z-ternary z-java&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-quoted z-single z-java&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-java&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;Jesus&lt;span class=&quot;z-punctuation z-definition z-string z-end z-java&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-parens z-end z-java&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-terminator z-java&quot;&gt;;&lt;&#x2F;span&gt;
        notifier&lt;span class=&quot;z-punctuation z-accessor z-dot z-java&quot;&gt;.&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-java&quot;&gt;&lt;span class=&quot;z-variable z-function z-java&quot;&gt;registerUser&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-parens z-begin z-java&quot;&gt;(&lt;&#x2F;span&gt;user&lt;span class=&quot;z-punctuation z-section z-parens z-end z-java&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-terminator z-java&quot;&gt;;&lt;&#x2F;span&gt;
    
        self&lt;span class=&quot;z-punctuation z-accessor z-dot z-java&quot;&gt;.&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-java&quot;&gt;&lt;span class=&quot;z-variable z-function z-java&quot;&gt;assertStringContainsString&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-parens z-begin z-java&quot;&gt;(&lt;&#x2F;span&gt;
            &lt;span class=&quot;z-string z-quoted z-double z-java&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-java&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;Notifying the user: Jesus&lt;span class=&quot;z-punctuation z-definition z-string z-end z-java&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-comma z-java&quot;&gt;,&lt;&#x2F;span&gt;
            logger&lt;span class=&quot;z-punctuation z-accessor z-dot z-java&quot;&gt;.&lt;&#x2F;span&gt;messages&lt;span class=&quot;z-punctuation z-accessor z-dot z-java&quot;&gt;.&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-java&quot;&gt;&lt;span class=&quot;z-variable z-function z-java&quot;&gt;firt&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-parens z-begin z-java&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-parens z-end z-java&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
        &lt;span class=&quot;z-punctuation z-section z-parens z-end z-java&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-terminator z-java&quot;&gt;;&lt;&#x2F;span&gt;
    &lt;span class=&quot;z-punctuation z-section z-block z-end z-java&quot;&gt;}&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;span class=&quot;z-punctuation z-section z-block z-end z-java&quot;&gt;}&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h2 id=&quot;mock&quot;&gt;Mock&lt;&#x2F;h2&gt;
&lt;p&gt;A mock is an object that is &lt;strong&gt;capable of controlling both indirect input and output&lt;&#x2F;strong&gt;, and it has a mechanism for
automatic &lt;strong&gt;assertion of expectations and results&lt;&#x2F;strong&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Imagine the ShoppingCart class calls the database and performs big and complex functions. For this reason, we cannot
unit test this class correctly due to the coupling.&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;java&quot; class=&quot;language-java z-code&quot;&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;z-source z-java&quot;&gt;&lt;span class=&quot;z-meta z-class z-java&quot;&gt;&lt;span class=&quot;z-storage z-modifier z-java&quot;&gt;final&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-class z-identifier z-java&quot;&gt;&lt;span class=&quot;z-storage z-type z-java&quot;&gt;class&lt;&#x2F;span&gt; &lt;span class=&quot;z-entity z-name z-class z-java&quot;&gt;ShoppingService&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;span class=&quot;z-meta z-class z-body z-java&quot;&gt;&lt;span class=&quot;z-meta z-block z-java&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-begin z-java&quot;&gt;{&lt;&#x2F;span&gt;
    &lt;span class=&quot;z-storage z-modifier z-java&quot;&gt;public&lt;&#x2F;span&gt; function &lt;span class=&quot;z-meta z-method z-java&quot;&gt;&lt;span class=&quot;z-meta z-method z-identifier z-java&quot;&gt;&lt;span class=&quot;z-entity z-name z-function z-java&quot;&gt;calculateAmount&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-method z-parameters z-java&quot;&gt;&lt;span class=&quot;z-meta z-parens z-java&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-parens z-begin z-java&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-support z-class z-java&quot;&gt;Lines&lt;&#x2F;span&gt; &lt;span class=&quot;z-variable z-parameter z-java&quot;&gt;lines&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-parens z-end z-java&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;: &lt;span class=&quot;z-support z-class z-java&quot;&gt;Float&lt;&#x2F;span&gt;
    &lt;span class=&quot;z-meta z-static z-body z-java&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-begin z-java&quot;&gt;{&lt;&#x2F;span&gt;
        &lt;span class=&quot;z-support z-class z-java&quot;&gt;Float&lt;&#x2F;span&gt; amount &lt;span class=&quot;z-meta z-assignment z-rhs z-java&quot;&gt;&lt;span class=&quot;z-keyword z-operator z-assignment z-java&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-java&quot;&gt;0&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-terminator z-java&quot;&gt;;&lt;&#x2F;span&gt;

        &lt;span class=&quot;z-comment z-block z-documentation z-javadoc&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-comment z-begin z-javadoc&quot;&gt;&#x2F;**&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-comment z-block z-documentation z-javadoc&quot;&gt;&lt;span class=&quot;z-text z-html z-javadoc&quot;&gt; Complex code to test, we need a mock for this class &lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-comment z-block z-documentation z-javadoc&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-comment z-end z-javadoc&quot;&gt;*&#x2F;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
        &lt;span class=&quot;z-support z-class z-java&quot;&gt;Array&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-generic z-java&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-generic z-begin z-java&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-support z-class z-java&quot;&gt;Line&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-definition z-generic z-end z-java&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; linesTransformed &lt;span class=&quot;z-meta z-assignment z-rhs z-java&quot;&gt;&lt;span class=&quot;z-keyword z-operator z-assignment z-java&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;z-support z-class z-java&quot;&gt;ShoppingCart&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-accessor z-double-colon z-java&quot;&gt;::&lt;&#x2F;span&gt;&lt;span class=&quot;z-variable z-function z-reference z-java&quot;&gt;transform&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-parens z-java&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-parens z-begin z-java&quot;&gt;(&lt;&#x2F;span&gt;lines&lt;span class=&quot;z-punctuation z-section z-parens z-end z-java&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-terminator z-java&quot;&gt;;&lt;&#x2F;span&gt;
        &lt;span class=&quot;z-meta z-function-call z-java&quot;&gt;&lt;span class=&quot;z-variable z-function z-java&quot;&gt;foreach&lt;&#x2F;span&gt; &lt;span class=&quot;z-punctuation z-section z-parens z-begin z-java&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-support z-class z-java&quot;&gt;Line&lt;&#x2F;span&gt; line &lt;span class=&quot;z-keyword z-operator z-ternary z-java&quot;&gt;:&lt;&#x2F;span&gt; linesTransformed&lt;span class=&quot;z-punctuation z-section z-parens z-end z-java&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-block z-java&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-begin z-java&quot;&gt;{&lt;&#x2F;span&gt;
            amount &lt;span class=&quot;z-meta z-assignment z-rhs z-java&quot;&gt;&lt;span class=&quot;z-keyword z-operator z-assignment z-java&quot;&gt;+=&lt;&#x2F;span&gt; line&lt;span class=&quot;z-punctuation z-accessor z-dot z-java&quot;&gt;.&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-java&quot;&gt;&lt;span class=&quot;z-variable z-function z-java&quot;&gt;price&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-parens z-begin z-java&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-parens z-end z-java&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-terminator z-java&quot;&gt;;&lt;&#x2F;span&gt;
        &lt;span class=&quot;z-punctuation z-section z-block z-end z-java&quot;&gt;}&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;

        &lt;span class=&quot;z-keyword z-control z-flow z-return z-java&quot;&gt;return&lt;&#x2F;span&gt; amount&lt;span class=&quot;z-punctuation z-terminator z-java&quot;&gt;;&lt;&#x2F;span&gt;
    &lt;span class=&quot;z-punctuation z-section z-block z-end z-java&quot;&gt;}&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;span class=&quot;z-punctuation z-section z-block z-end z-java&quot;&gt;}&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;In this kind of situations, mocking is the best option if we cannot modify this class easily (maybe the class is used in
different parts), and it could take too long to refactorize.&lt;&#x2F;p&gt;
&lt;p&gt;My favourite solution for this is ‚Äú&lt;a href=&quot;https:&#x2F;&#x2F;refactoring.guru&#x2F;extract-method&quot;&gt;extract method refactoring&lt;&#x2F;a&gt;‚Äù:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;java&quot; class=&quot;language-java z-code&quot;&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;z-source z-java&quot;&gt;&lt;span class=&quot;z-meta z-class z-java&quot;&gt;&lt;span class=&quot;z-meta z-class z-identifier z-java&quot;&gt;&lt;span class=&quot;z-storage z-type z-java&quot;&gt;class&lt;&#x2F;span&gt; &lt;span class=&quot;z-entity z-name z-class z-java&quot;&gt;ShoppingService&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-comment z-line z-double-slash z-java&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-comment z-java&quot;&gt;&#x2F;&#x2F;&lt;&#x2F;span&gt; Not final anymore because of the mock!!
&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-class z-body z-java&quot;&gt;&lt;span class=&quot;z-meta z-block z-java&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-begin z-java&quot;&gt;{&lt;&#x2F;span&gt;
    &lt;span class=&quot;z-storage z-modifier z-java&quot;&gt;public&lt;&#x2F;span&gt; function &lt;span class=&quot;z-meta z-method z-java&quot;&gt;&lt;span class=&quot;z-meta z-method z-identifier z-java&quot;&gt;&lt;span class=&quot;z-entity z-name z-function z-java&quot;&gt;calculateAmount&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-method z-parameters z-java&quot;&gt;&lt;span class=&quot;z-meta z-parens z-java&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-parens z-begin z-java&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-support z-class z-java&quot;&gt;Lines&lt;&#x2F;span&gt; &lt;span class=&quot;z-variable z-parameter z-java&quot;&gt;lines&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-parens z-end z-java&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;: &lt;span class=&quot;z-support z-class z-java&quot;&gt;Float&lt;&#x2F;span&gt;
    &lt;span class=&quot;z-meta z-static z-body z-java&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-begin z-java&quot;&gt;{&lt;&#x2F;span&gt;
        &lt;span class=&quot;z-support z-class z-java&quot;&gt;Float&lt;&#x2F;span&gt; amount &lt;span class=&quot;z-meta z-assignment z-rhs z-java&quot;&gt;&lt;span class=&quot;z-keyword z-operator z-assignment z-java&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-java&quot;&gt;0&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-terminator z-java&quot;&gt;;&lt;&#x2F;span&gt;

        &lt;span class=&quot;z-comment z-block z-documentation z-javadoc&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-comment z-begin z-javadoc&quot;&gt;&#x2F;**&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-comment z-block z-documentation z-javadoc&quot;&gt;&lt;span class=&quot;z-text z-html z-javadoc&quot;&gt; Complex code to test, we need a mock for this class &lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-comment z-block z-documentation z-javadoc&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-comment z-end z-javadoc&quot;&gt;*&#x2F;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
        &lt;span class=&quot;z-support z-class z-java&quot;&gt;Array&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-generic z-java&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-generic z-begin z-java&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-support z-class z-java&quot;&gt;Line&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-definition z-generic z-end z-java&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; linesTransformed &lt;span class=&quot;z-meta z-assignment z-rhs z-java&quot;&gt;&lt;span class=&quot;z-keyword z-operator z-assignment z-java&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;z-variable z-language z-java&quot;&gt;this&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-accessor z-dot z-java&quot;&gt;.&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-java&quot;&gt;&lt;span class=&quot;z-variable z-function z-java&quot;&gt;getShoppingCart&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-parens z-begin z-java&quot;&gt;(&lt;&#x2F;span&gt;lines&lt;span class=&quot;z-punctuation z-section z-parens z-end z-java&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-terminator z-java&quot;&gt;;&lt;&#x2F;span&gt;
        &lt;span class=&quot;z-meta z-function-call z-java&quot;&gt;&lt;span class=&quot;z-variable z-function z-java&quot;&gt;foreach&lt;&#x2F;span&gt; &lt;span class=&quot;z-punctuation z-section z-parens z-begin z-java&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-support z-class z-java&quot;&gt;Line&lt;&#x2F;span&gt; line &lt;span class=&quot;z-keyword z-operator z-ternary z-java&quot;&gt;:&lt;&#x2F;span&gt; linesTransformed&lt;span class=&quot;z-punctuation z-section z-parens z-end z-java&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-block z-java&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-begin z-java&quot;&gt;{&lt;&#x2F;span&gt;
            amount &lt;span class=&quot;z-meta z-assignment z-rhs z-java&quot;&gt;&lt;span class=&quot;z-keyword z-operator z-assignment z-java&quot;&gt;+=&lt;&#x2F;span&gt; line&lt;span class=&quot;z-punctuation z-accessor z-dot z-java&quot;&gt;.&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-java&quot;&gt;&lt;span class=&quot;z-variable z-function z-java&quot;&gt;price&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-parens z-begin z-java&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-parens z-end z-java&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-terminator z-java&quot;&gt;;&lt;&#x2F;span&gt;
        &lt;span class=&quot;z-punctuation z-section z-block z-end z-java&quot;&gt;}&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;

        &lt;span class=&quot;z-keyword z-control z-flow z-return z-java&quot;&gt;return&lt;&#x2F;span&gt; amount&lt;span class=&quot;z-punctuation z-terminator z-java&quot;&gt;;&lt;&#x2F;span&gt;
    &lt;span class=&quot;z-punctuation z-section z-block z-end z-java&quot;&gt;}&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;

    &lt;span class=&quot;z-comment z-block z-documentation z-javadoc&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-comment z-begin z-javadoc&quot;&gt;&#x2F;**&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-comment z-block z-documentation z-javadoc&quot;&gt;&lt;span class=&quot;z-text z-html z-javadoc&quot;&gt;
     &lt;span class=&quot;z-punctuation z-definition z-comment z-javadoc&quot;&gt;*&lt;&#x2F;span&gt; Protected to have access in the mock object.
     &lt;span class=&quot;z-punctuation z-definition z-comment z-javadoc&quot;&gt;*&lt;&#x2F;span&gt;
     &lt;span class=&quot;z-punctuation z-definition z-comment z-javadoc&quot;&gt;*&lt;&#x2F;span&gt; @codeCoverageIgnore
     &lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-comment z-block z-documentation z-javadoc&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-comment z-end z-javadoc&quot;&gt;*&#x2F;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
    &lt;span class=&quot;z-storage z-modifier z-java&quot;&gt;protected&lt;&#x2F;span&gt; function &lt;span class=&quot;z-meta z-method z-java&quot;&gt;&lt;span class=&quot;z-meta z-method z-identifier z-java&quot;&gt;&lt;span class=&quot;z-entity z-name z-function z-java&quot;&gt;getShoppingCart&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-method z-parameters z-java&quot;&gt;&lt;span class=&quot;z-meta z-parens z-java&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-parens z-begin z-java&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-support z-class z-java&quot;&gt;Lines&lt;&#x2F;span&gt; &lt;span class=&quot;z-variable z-parameter z-java&quot;&gt;lines&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-parens z-end z-java&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;: &lt;span class=&quot;z-support z-class z-java&quot;&gt;Array&lt;&#x2F;span&gt;
    &lt;span class=&quot;z-meta z-static z-body z-java&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-begin z-java&quot;&gt;{&lt;&#x2F;span&gt;
        &lt;span class=&quot;z-keyword z-control z-flow z-return z-java&quot;&gt;return&lt;&#x2F;span&gt; &lt;span class=&quot;z-support z-class z-java&quot;&gt;ShoppingCart&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-accessor z-double-colon z-java&quot;&gt;::&lt;&#x2F;span&gt;&lt;span class=&quot;z-variable z-function z-reference z-java&quot;&gt;transform&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-parens z-java&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-parens z-begin z-java&quot;&gt;(&lt;&#x2F;span&gt;lines&lt;span class=&quot;z-punctuation z-section z-parens z-end z-java&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-terminator z-java&quot;&gt;;&lt;&#x2F;span&gt;
    &lt;span class=&quot;z-punctuation z-section z-block z-end z-java&quot;&gt;}&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;span class=&quot;z-punctuation z-section z-block z-end z-java&quot;&gt;}&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;And this is the mock:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;java&quot; class=&quot;language-java z-code&quot;&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;z-source z-java&quot;&gt;&lt;span class=&quot;z-meta z-class z-java&quot;&gt;&lt;span class=&quot;z-storage z-modifier z-java&quot;&gt;final&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-class z-identifier z-java&quot;&gt;&lt;span class=&quot;z-storage z-type z-java&quot;&gt;class&lt;&#x2F;span&gt; &lt;span class=&quot;z-entity z-name z-class z-java&quot;&gt;LoggerTest&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-class z-extends z-java&quot;&gt;&lt;span class=&quot;z-keyword z-declaration z-extends z-java&quot;&gt;extends&lt;&#x2F;span&gt; &lt;span class=&quot;z-entity z-other z-inherited-class z-java&quot;&gt;TestCase&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-class z-body z-java&quot;&gt;&lt;span class=&quot;z-meta z-block z-java&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-begin z-java&quot;&gt;{&lt;&#x2F;span&gt;
    &lt;span class=&quot;z-storage z-modifier z-java&quot;&gt;public&lt;&#x2F;span&gt; function &lt;span class=&quot;z-meta z-method z-java&quot;&gt;&lt;span class=&quot;z-meta z-method z-identifier z-java&quot;&gt;&lt;span class=&quot;z-entity z-name z-function z-java&quot;&gt;testMovieBudgetFactory&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-method z-parameters z-java&quot;&gt;&lt;span class=&quot;z-meta z-parens z-java&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-parens z-begin z-java&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-parens z-end z-java&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;: &lt;span class=&quot;z-meta z-method z-java&quot;&gt;&lt;span class=&quot;z-storage z-type z-void z-java&quot;&gt;void&lt;&#x2F;span&gt;
    &lt;span class=&quot;z-meta z-method z-java&quot;&gt;&lt;span class=&quot;z-meta z-method z-body z-java&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-begin z-java&quot;&gt;{&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-method z-java&quot;&gt;&lt;span class=&quot;z-meta z-method z-body z-java&quot;&gt;
        &lt;span class=&quot;z-support z-class z-java&quot;&gt;MockShoppingService&lt;&#x2F;span&gt; service &lt;span class=&quot;z-meta z-assignment z-rhs z-java&quot;&gt;&lt;span class=&quot;z-keyword z-operator z-assignment z-java&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;z-variable z-language z-java&quot;&gt;this&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-accessor z-dot z-java&quot;&gt;.&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-java&quot;&gt;&lt;span class=&quot;z-variable z-function z-java&quot;&gt;createMock&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-parens z-begin z-java&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-support z-class z-java&quot;&gt;ShoppingService&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-accessor z-double-colon z-java&quot;&gt;::&lt;&#x2F;span&gt;&lt;span class=&quot;z-variable z-function z-reference z-java&quot;&gt;class&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-parens z-end z-java&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-terminator z-java&quot;&gt;;&lt;&#x2F;span&gt;
        service
            &lt;span class=&quot;z-punctuation z-accessor z-dot z-java&quot;&gt;.&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-java&quot;&gt;&lt;span class=&quot;z-variable z-function z-java&quot;&gt;method&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-parens z-begin z-java&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-string z-quoted z-single z-java&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-java&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;getShoppingCart&lt;span class=&quot;z-punctuation z-definition z-string z-end z-java&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-parens z-end z-java&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-comment z-line z-double-slash z-java&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-comment z-java&quot;&gt;&#x2F;&#x2F;&lt;&#x2F;span&gt; Overriding the method.
&lt;&#x2F;span&gt;            &lt;span class=&quot;z-punctuation z-accessor z-dot z-java&quot;&gt;.&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-java&quot;&gt;&lt;span class=&quot;z-variable z-function z-java&quot;&gt;willReturn&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-parens z-begin z-java&quot;&gt;(&lt;&#x2F;span&gt;[&lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-java&quot;&gt;100&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-comma z-java&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-java&quot;&gt;200&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-comma z-java&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-java&quot;&gt;300&lt;&#x2F;span&gt;]&lt;span class=&quot;z-punctuation z-section z-parens z-end z-java&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-terminator z-java&quot;&gt;;&lt;&#x2F;span&gt;

        &lt;span class=&quot;z-support z-class z-java&quot;&gt;Lines&lt;&#x2F;span&gt; stubLines &lt;span class=&quot;z-meta z-assignment z-rhs z-java&quot;&gt;&lt;span class=&quot;z-keyword z-operator z-assignment z-java&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-instantiation z-java&quot;&gt;&lt;span class=&quot;z-keyword z-other z-storage z-new z-java&quot;&gt;new&lt;&#x2F;span&gt; &lt;span class=&quot;z-support z-class z-java&quot;&gt;Lines&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-parens z-constructor-arguments z-java&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-parens z-begin z-java&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-constant z-language z-java&quot;&gt;null&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-parens z-end z-java&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-terminator z-java&quot;&gt;;&lt;&#x2F;span&gt;
        &lt;span class=&quot;z-support z-class z-java&quot;&gt;Float&lt;&#x2F;span&gt; totalAmount &lt;span class=&quot;z-meta z-assignment z-rhs z-java&quot;&gt;&lt;span class=&quot;z-keyword z-operator z-assignment z-java&quot;&gt;=&lt;&#x2F;span&gt; service&lt;span class=&quot;z-punctuation z-accessor z-dot z-java&quot;&gt;.&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-java&quot;&gt;&lt;span class=&quot;z-variable z-function z-java&quot;&gt;calculateAmount&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-parens z-begin z-java&quot;&gt;(&lt;&#x2F;span&gt;stubLines&lt;span class=&quot;z-punctuation z-section z-parens z-end z-java&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-terminator z-java&quot;&gt;;&lt;&#x2F;span&gt;

        self&lt;span class=&quot;z-punctuation z-accessor z-dot z-java&quot;&gt;.&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-java&quot;&gt;&lt;span class=&quot;z-variable z-function z-java&quot;&gt;assertEquals&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-parens z-begin z-java&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-java&quot;&gt;600&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-comma z-java&quot;&gt;,&lt;&#x2F;span&gt; totalAmount&lt;span class=&quot;z-punctuation z-section z-parens z-end z-java&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-terminator z-java&quot;&gt;;&lt;&#x2F;span&gt;
    &lt;span class=&quot;z-punctuation z-section z-block z-end z-java&quot;&gt;}&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;span class=&quot;z-punctuation z-section z-block z-end z-java&quot;&gt;}&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;blockquote&gt;
&lt;p&gt;This methodology is very handy when we want to refactor a class step-by-step, but we could go further and extract that
logic in a new class, then when the class &lt;code&gt;ShoppingService&lt;&#x2F;code&gt; is created, just injecting the dependency via constructor
would help us to separate the logic.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;h2 id=&quot;fake&quot;&gt;Fake&lt;&#x2F;h2&gt;
&lt;p&gt;A fake is a simpler implementation of real objects.&lt;&#x2F;p&gt;
&lt;p&gt;Fakes are used when we want to test an infrastructural class, in other words, fakes are for the classes which are beyond
our application limit (repositories or queues, for example).&lt;&#x2F;p&gt;
&lt;p&gt;As you can observe in the first picture (the diagram), a fake is not in the hierarchical line within the dummy, stub,
spy or mock. This is because a fake can behave like a dummy, stub, spy or mock for our concrete use case.&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;java&quot; class=&quot;language-java z-code&quot;&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;z-source z-java&quot;&gt;&lt;span class=&quot;z-meta z-class z-java&quot;&gt;&lt;span class=&quot;z-meta z-class z-identifier z-java&quot;&gt;&lt;span class=&quot;z-storage z-type z-java&quot;&gt;interface&lt;&#x2F;span&gt; &lt;span class=&quot;z-entity z-name z-class z-java&quot;&gt;UserRepositoryInterface&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;span class=&quot;z-meta z-class z-body z-java&quot;&gt;&lt;span class=&quot;z-meta z-block z-java&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-begin z-java&quot;&gt;{&lt;&#x2F;span&gt;
    &lt;span class=&quot;z-storage z-modifier z-java&quot;&gt;public&lt;&#x2F;span&gt; function &lt;span class=&quot;z-meta z-method z-java&quot;&gt;&lt;span class=&quot;z-meta z-method z-identifier z-java&quot;&gt;&lt;span class=&quot;z-entity z-name z-function z-java&quot;&gt;getUserById&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-method z-parameters z-java&quot;&gt;&lt;span class=&quot;z-meta z-parens z-java&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-parens z-begin z-java&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-support z-class z-java&quot;&gt;String&lt;&#x2F;span&gt; &lt;span class=&quot;z-variable z-parameter z-java&quot;&gt;uuid&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-parens z-end z-java&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;: &lt;span class=&quot;z-support z-class z-java&quot;&gt;User&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-terminator z-java&quot;&gt;;&lt;&#x2F;span&gt;
&lt;span class=&quot;z-punctuation z-section z-block z-end z-java&quot;&gt;}&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
    
&lt;span class=&quot;z-meta z-class z-java&quot;&gt;&lt;span class=&quot;z-storage z-modifier z-java&quot;&gt;final&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-class z-identifier z-java&quot;&gt;&lt;span class=&quot;z-storage z-type z-java&quot;&gt;class&lt;&#x2F;span&gt; &lt;span class=&quot;z-entity z-name z-class z-java&quot;&gt;FakeUserRepository&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-class z-implements z-java&quot;&gt;&lt;span class=&quot;z-keyword z-declaration z-implements z-java&quot;&gt;implements&lt;&#x2F;span&gt; &lt;span class=&quot;z-entity z-other z-inherited-class z-java&quot;&gt;UserRepositoryInterface&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-class z-body z-java&quot;&gt;&lt;span class=&quot;z-meta z-block z-java&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-begin z-java&quot;&gt;{&lt;&#x2F;span&gt;
    &lt;span class=&quot;z-storage z-modifier z-java&quot;&gt;public&lt;&#x2F;span&gt; function &lt;span class=&quot;z-meta z-method z-java&quot;&gt;&lt;span class=&quot;z-meta z-method z-identifier z-java&quot;&gt;&lt;span class=&quot;z-entity z-name z-function z-java&quot;&gt;getUserById&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-method z-parameters z-java&quot;&gt;&lt;span class=&quot;z-meta z-parens z-java&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-parens z-begin z-java&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-support z-class z-java&quot;&gt;String&lt;&#x2F;span&gt; &lt;span class=&quot;z-variable z-parameter z-java&quot;&gt;uuid&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-parens z-end z-java&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;: &lt;span class=&quot;z-support z-class z-java&quot;&gt;UserModel&lt;&#x2F;span&gt;
    &lt;span class=&quot;z-meta z-static z-body z-java&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-begin z-java&quot;&gt;{&lt;&#x2F;span&gt;
        &lt;span class=&quot;z-keyword z-control z-flow z-return z-java&quot;&gt;return&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-instantiation z-java&quot;&gt;&lt;span class=&quot;z-keyword z-other z-storage z-new z-java&quot;&gt;new&lt;&#x2F;span&gt; &lt;span class=&quot;z-support z-class z-java&quot;&gt;User&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-parens z-constructor-arguments z-java&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-parens z-begin z-java&quot;&gt;(&lt;&#x2F;span&gt;uuid&lt;span class=&quot;z-punctuation z-separator z-comma z-java&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-quoted z-single z-java&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-java&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;Jesus&lt;span class=&quot;z-punctuation z-definition z-string z-end z-java&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-comma z-java&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-quoted z-double z-java&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-java&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;[&amp;#39;ADMIN_ROLE&amp;#39;]&lt;span class=&quot;z-punctuation z-definition z-string z-end z-java&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-parens z-end z-java&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-terminator z-java&quot;&gt;;&lt;&#x2F;span&gt;
    &lt;span class=&quot;z-punctuation z-section z-block z-end z-java&quot;&gt;}&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;span class=&quot;z-punctuation z-section z-block z-end z-java&quot;&gt;}&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;So, when we use this fake repository, we will receive a stub User.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;final-thoughts&quot;&gt;Final thoughts&lt;&#x2F;h3&gt;
&lt;p&gt;We must know the scope of the code we are going to test to get coupled as less as possible.
That means if we have to pick a test double, first, we must know if the test is within our boundaries or not, if not, a
fake is the best option, otherwise, my recommendation is to pick the corresponding test with the least knowledge as
possible: dummy, stub, spy or mock (in that order).&lt;&#x2F;p&gt;
&lt;div class=&quot;separator&quot;&gt;&lt;&#x2F;div&gt;
&lt;h2 id=&quot;references&quot;&gt;References&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Chemaclass&#x2F;php-best-practices&#x2F;blob&#x2F;master&#x2F;technical-skills&#x2F;testing.md&quot;&gt;Best practices ‚Äî Testing | Chemaclass Github&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;matthiasnoback.nl&#x2F;2014&#x2F;07&#x2F;test-doubles&#x2F;&quot;&gt;A better PHP testing experience | Matthias Noback&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;code.tutsplus.com&#x2F;tutorials&#x2F;all-about-mocking-with-phpunit--net-27252&quot;&gt;All about Mocking with PHPUnit | TutsPlus&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;blog.cleancoder.com&#x2F;uncle-bob&#x2F;2014&#x2F;05&#x2F;14&#x2F;TheLittleMocker.html&quot;&gt;The Little Mocker | Clean Coder&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;testing.googleblog.com&#x2F;2013&#x2F;07&#x2F;testing-on-toilet-know-your-test-doubles.html&quot;&gt;Testing on the Toilet | Google Testing Blog&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;martinfowler.com&#x2F;bliki&#x2F;TestDouble.html&quot;&gt;TestDouble | Martin Fowler&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;martinfowler.com&#x2F;bliki&#x2F;GivenWhenThen.html&quot;&gt;GivenWhenThen | Martin Fowler&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>Why you should not use Reflection when testing</title>
		<published>2020-04-03T00:00:00+00:00</published>
		<updated>2020-04-03T00:00:00+00:00</updated>
		<link rel="alternate" href="https://jesusvalera.dev/why-you-should-not-use-reflection-when-testing/" type="text/html"/>
		<id>https://jesusvalera.dev/why-you-should-not-use-reflection-when-testing/</id>
		<content type="html">&lt;p&gt;&lt;img src=&quot;&#x2F;images&#x2F;2020-04-03&#x2F;1.png&quot; alt=&quot;the-art-of-programming-meme&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;h2 id=&quot;it-causes-bugs-when-refactoring-due-to-the-high-coupling&quot;&gt;It causes bugs when refactoring due to the high coupling&lt;&#x2F;h2&gt;
&lt;p&gt;When we use reflection, our tests get too fragile, we are allowing our tests to know so much information about the real
implementation.
We need to hardcode the method name, and we are coupling our test method to the production code.
Furthermore, we need to write a lot about boilerplate to test a simple method.&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Question&lt;&#x2F;strong&gt;: I need to get at least 80% of code coverage, how can I get it without the Reflection class?&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;Answer&lt;&#x2F;strong&gt;: You should test ONLY your public methods, and depending on the variables we pass, we should reach all the
possible paths.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;So, we do not need to test the private methods per se; they are called indirectly from our public functions.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;comparison-between-standard-and-reflection-tests&quot;&gt;Comparison between standard and Reflection tests&lt;&#x2F;h2&gt;
&lt;pre data-lang=&quot;php source&quot; class=&quot;language-php source z-code&quot;&gt;&lt;code class=&quot;language-php source&quot; data-lang=&quot;php source&quot;&gt;&lt;span class=&quot;z-source z-php&quot;&gt;&lt;span class=&quot;z-meta z-class z-php&quot;&gt;&lt;span class=&quot;z-storage z-modifier z-abstract z-php&quot;&gt;final &lt;&#x2F;span&gt;&lt;span class=&quot;z-storage z-type z-class z-php&quot;&gt;class&lt;&#x2F;span&gt; &lt;span class=&quot;z-entity z-name z-class z-php&quot;&gt;Addition&lt;&#x2F;span&gt;
&lt;span class=&quot;z-meta z-block z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-php&quot;&gt;{&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-class z-php&quot;&gt;&lt;span class=&quot;z-meta z-block z-php&quot;&gt;
    &lt;span class=&quot;z-storage z-modifier z-php&quot;&gt;public&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-function z-php&quot;&gt;&lt;span class=&quot;z-storage z-type z-function z-php&quot;&gt;function&lt;&#x2F;span&gt; &lt;span class=&quot;z-entity z-name z-function z-php&quot;&gt;simpleOperation&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-parameters z-php&quot;&gt;&lt;span class=&quot;z-meta z-group z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-php&quot;&gt;(&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-parameters z-php&quot;&gt;&lt;span class=&quot;z-meta z-group z-php&quot;&gt;&lt;span class=&quot;z-storage z-type z-php&quot;&gt;int&lt;&#x2F;span&gt; &lt;span class=&quot;z-variable z-parameter z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-variable z-php&quot;&gt;$&lt;&#x2F;span&gt;number1&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-php&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-storage z-type z-php&quot;&gt;int&lt;&#x2F;span&gt; &lt;span class=&quot;z-variable z-parameter z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-variable z-php&quot;&gt;$&lt;&#x2F;span&gt;number2&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-php&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-return-type z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-separator z-php&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-storage z-type z-php&quot;&gt;int&lt;&#x2F;span&gt;
    &lt;span class=&quot;z-meta z-block z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-begin z-php&quot;&gt;{&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-php&quot;&gt;&lt;span class=&quot;z-meta z-block z-php&quot;&gt;
        &lt;span class=&quot;z-keyword z-control z-php&quot;&gt;return&lt;&#x2F;span&gt; &lt;span class=&quot;z-variable z-other z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-variable z-php&quot;&gt;$&lt;&#x2F;span&gt;number1&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-arithmetic z-php&quot;&gt;+&lt;&#x2F;span&gt; &lt;span class=&quot;z-variable z-other z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-variable z-php&quot;&gt;$&lt;&#x2F;span&gt;number2&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-terminator z-expression z-php&quot;&gt;;&lt;&#x2F;span&gt;
    &lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-php&quot;&gt;&lt;span class=&quot;z-meta z-block z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-end z-php&quot;&gt;}&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-class z-php&quot;&gt;&lt;span class=&quot;z-meta z-block z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-php&quot;&gt;}&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;

&lt;span class=&quot;z-meta z-class z-php&quot;&gt;&lt;span class=&quot;z-storage z-modifier z-abstract z-php&quot;&gt;final &lt;&#x2F;span&gt;&lt;span class=&quot;z-storage z-type z-class z-php&quot;&gt;class&lt;&#x2F;span&gt; &lt;span class=&quot;z-entity z-name z-class z-php&quot;&gt;Operation&lt;&#x2F;span&gt;
&lt;span class=&quot;z-meta z-block z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-php&quot;&gt;{&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-class z-php&quot;&gt;&lt;span class=&quot;z-meta z-block z-php&quot;&gt;
    &lt;span class=&quot;z-storage z-modifier z-php&quot;&gt;public&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-function z-php&quot;&gt;&lt;span class=&quot;z-storage z-type z-function z-php&quot;&gt;function&lt;&#x2F;span&gt; &lt;span class=&quot;z-entity z-name z-function z-php&quot;&gt;addition&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-parameters z-php&quot;&gt;&lt;span class=&quot;z-meta z-group z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-php&quot;&gt;(&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-parameters z-php&quot;&gt;&lt;span class=&quot;z-meta z-group z-php&quot;&gt;&lt;span class=&quot;z-storage z-type z-php&quot;&gt;int&lt;&#x2F;span&gt; &lt;span class=&quot;z-variable z-parameter z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-variable z-php&quot;&gt;$&lt;&#x2F;span&gt;number1&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-php&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-storage z-type z-php&quot;&gt;int&lt;&#x2F;span&gt; &lt;span class=&quot;z-variable z-parameter z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-variable z-php&quot;&gt;$&lt;&#x2F;span&gt;number2&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-php&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-return-type z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-separator z-php&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-storage z-type z-php&quot;&gt;int&lt;&#x2F;span&gt;
    &lt;span class=&quot;z-meta z-block z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-begin z-php&quot;&gt;{&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-php&quot;&gt;&lt;span class=&quot;z-meta z-block z-php&quot;&gt;
        &lt;span class=&quot;z-keyword z-control z-php&quot;&gt;return&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-group z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-php&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-keyword z-other z-new z-php&quot;&gt;new&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-path z-php&quot;&gt;&lt;span class=&quot;z-support z-class z-php&quot;&gt;Addition&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-php&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-php&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-php&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-method z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-accessor z-arrow z-php&quot;&gt;-&amp;gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-variable z-function z-php&quot;&gt;simpleOperation&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-php&quot;&gt;&lt;span class=&quot;z-meta z-group z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-php&quot;&gt;(&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-php&quot;&gt;&lt;span class=&quot;z-meta z-group z-php&quot;&gt;&lt;span class=&quot;z-variable z-other z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-variable z-php&quot;&gt;$&lt;&#x2F;span&gt;number1&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-php&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-variable z-other z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-variable z-php&quot;&gt;$&lt;&#x2F;span&gt;number2&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-php&quot;&gt;&lt;span class=&quot;z-meta z-group z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-php&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-terminator z-expression z-php&quot;&gt;;&lt;&#x2F;span&gt;
    &lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-php&quot;&gt;&lt;span class=&quot;z-meta z-block z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-end z-php&quot;&gt;}&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-class z-php&quot;&gt;&lt;span class=&quot;z-meta z-block z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-php&quot;&gt;}&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;

&lt;span class=&quot;z-meta z-class z-php&quot;&gt;&lt;span class=&quot;z-storage z-modifier z-abstract z-php&quot;&gt;final &lt;&#x2F;span&gt;&lt;span class=&quot;z-storage z-type z-class z-php&quot;&gt;class&lt;&#x2F;span&gt; &lt;span class=&quot;z-entity z-name z-class z-php&quot;&gt;OperationTest&lt;&#x2F;span&gt;
&lt;span class=&quot;z-meta z-block z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-php&quot;&gt;{&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-class z-php&quot;&gt;&lt;span class=&quot;z-meta z-block z-php&quot;&gt;
    &lt;span class=&quot;z-comment z-line z-double-slash z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-comment z-php&quot;&gt;&#x2F;&#x2F;&lt;&#x2F;span&gt; Without Reflection.
&lt;&#x2F;span&gt;    &lt;span class=&quot;z-storage z-modifier z-php&quot;&gt;public&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-function z-php&quot;&gt;&lt;span class=&quot;z-storage z-type z-function z-php&quot;&gt;function&lt;&#x2F;span&gt; &lt;span class=&quot;z-entity z-name z-function z-php&quot;&gt;testSimpleOperationWithoutReflection&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-parameters z-php&quot;&gt;&lt;span class=&quot;z-meta z-group z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-php&quot;&gt;(&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-parameters z-php&quot;&gt;&lt;span class=&quot;z-meta z-group z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-php&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-return-type z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-separator z-php&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-path z-php&quot;&gt;&lt;span class=&quot;z-support z-class z-php&quot;&gt;void&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
    &lt;span class=&quot;z-meta z-block z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-begin z-php&quot;&gt;{&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-php&quot;&gt;&lt;span class=&quot;z-meta z-block z-php&quot;&gt;
        &lt;span class=&quot;z-variable z-other z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-variable z-php&quot;&gt;$&lt;&#x2F;span&gt;operation&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-assignment z-php&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-other z-new z-php&quot;&gt;new&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-path z-php&quot;&gt;&lt;span class=&quot;z-support z-class z-php&quot;&gt;Operation&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-php&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-php&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-terminator z-expression z-php&quot;&gt;;&lt;&#x2F;span&gt;
        &lt;span class=&quot;z-variable z-language z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-variable z-php&quot;&gt;$&lt;&#x2F;span&gt;this&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-method z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-accessor z-arrow z-php&quot;&gt;-&amp;gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-variable z-function z-php&quot;&gt;assertSame&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-php&quot;&gt;&lt;span class=&quot;z-meta z-group z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-php&quot;&gt;(&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-php&quot;&gt;&lt;span class=&quot;z-meta z-group z-php&quot;&gt;&lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-php&quot;&gt;4&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-php&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-variable z-other z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-variable z-php&quot;&gt;$&lt;&#x2F;span&gt;operation&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-method z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-accessor z-arrow z-php&quot;&gt;-&amp;gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-variable z-function z-php&quot;&gt;addition&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-php&quot;&gt;&lt;span class=&quot;z-meta z-group z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-php&quot;&gt;(&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-php&quot;&gt;&lt;span class=&quot;z-meta z-group z-php&quot;&gt;&lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-php&quot;&gt;2&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-php&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-php&quot;&gt;2&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-php&quot;&gt;&lt;span class=&quot;z-meta z-group z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-php&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-php&quot;&gt;&lt;span class=&quot;z-meta z-group z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-php&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-terminator z-expression z-php&quot;&gt;;&lt;&#x2F;span&gt;
    &lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-php&quot;&gt;&lt;span class=&quot;z-meta z-block z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-end z-php&quot;&gt;}&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;

    &lt;span class=&quot;z-comment z-line z-double-slash z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-comment z-php&quot;&gt;&#x2F;&#x2F;&lt;&#x2F;span&gt; With Reflection.
&lt;&#x2F;span&gt;    &lt;span class=&quot;z-storage z-modifier z-php&quot;&gt;public&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-function z-php&quot;&gt;&lt;span class=&quot;z-storage z-type z-function z-php&quot;&gt;function&lt;&#x2F;span&gt; &lt;span class=&quot;z-entity z-name z-function z-php&quot;&gt;testSimpleOperationWithReflection&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-parameters z-php&quot;&gt;&lt;span class=&quot;z-meta z-group z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-php&quot;&gt;(&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-parameters z-php&quot;&gt;&lt;span class=&quot;z-meta z-group z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-php&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-return-type z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-separator z-php&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-path z-php&quot;&gt;&lt;span class=&quot;z-support z-class z-php&quot;&gt;void&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
    &lt;span class=&quot;z-meta z-block z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-begin z-php&quot;&gt;{&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-php&quot;&gt;&lt;span class=&quot;z-meta z-block z-php&quot;&gt;
        &lt;span class=&quot;z-variable z-other z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-variable z-php&quot;&gt;$&lt;&#x2F;span&gt;addition&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-assignment z-php&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;z-variable z-language z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-variable z-php&quot;&gt;$&lt;&#x2F;span&gt;this&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-method z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-accessor z-arrow z-php&quot;&gt;-&amp;gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-variable z-function z-php&quot;&gt;createPartialMock&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-php&quot;&gt;&lt;span class=&quot;z-meta z-group z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-php&quot;&gt;(&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-php&quot;&gt;&lt;span class=&quot;z-meta z-group z-php&quot;&gt;&lt;span class=&quot;z-meta z-path z-php&quot;&gt;&lt;span class=&quot;z-support z-class z-php&quot;&gt;Addition&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-accessor z-double-colon z-php&quot;&gt;::&lt;&#x2F;span&gt;&lt;span class=&quot;z-constant z-class z-php&quot;&gt;class&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-php&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-array z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-array z-begin z-php&quot;&gt;[&lt;&#x2F;span&gt;
            &lt;span class=&quot;z-string z-quoted z-single z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-php&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-string z-quoted z-single z-php&quot;&gt;&lt;span class=&quot;z-meta z-string-contents z-quoted z-single z-php&quot;&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-string z-quoted z-single z-php&quot;&gt;&lt;span class=&quot;z-meta z-string-contents z-quoted z-single z-php&quot;&gt;simpleOperation&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-end z-php&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;,
        &lt;span class=&quot;z-punctuation z-section z-array z-end z-php&quot;&gt;]&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-php&quot;&gt;&lt;span class=&quot;z-meta z-group z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-php&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-terminator z-expression z-php&quot;&gt;;&lt;&#x2F;span&gt;

        &lt;span class=&quot;z-variable z-other z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-variable z-php&quot;&gt;$&lt;&#x2F;span&gt;result&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-assignment z-php&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-php&quot;&gt;2&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-arithmetic z-php&quot;&gt;+&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-php&quot;&gt;2&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-terminator z-expression z-php&quot;&gt;;&lt;&#x2F;span&gt;
        &lt;span class=&quot;z-variable z-other z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-variable z-php&quot;&gt;$&lt;&#x2F;span&gt;addition&lt;&#x2F;span&gt;
            &lt;span class=&quot;z-meta z-function-call z-method z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-accessor z-arrow z-php&quot;&gt;-&amp;gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-variable z-function z-php&quot;&gt;expects&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-php&quot;&gt;&lt;span class=&quot;z-meta z-group z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-php&quot;&gt;(&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-php&quot;&gt;&lt;span class=&quot;z-meta z-group z-php&quot;&gt;&lt;span class=&quot;z-variable z-language z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-variable z-php&quot;&gt;$&lt;&#x2F;span&gt;this&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-method z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-accessor z-arrow z-php&quot;&gt;-&amp;gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-variable z-function z-php&quot;&gt;once&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-php&quot;&gt;&lt;span class=&quot;z-meta z-group z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-php&quot;&gt;(&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-php&quot;&gt;&lt;span class=&quot;z-meta z-group z-php&quot;&gt;&lt;span class=&quot;z-meta z-function-call z-php&quot;&gt;&lt;span class=&quot;z-meta z-group z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-php&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-php&quot;&gt;&lt;span class=&quot;z-meta z-group z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-php&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
            &lt;span class=&quot;z-meta z-function-call z-method z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-accessor z-arrow z-php&quot;&gt;-&amp;gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-variable z-function z-php&quot;&gt;method&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-php&quot;&gt;&lt;span class=&quot;z-meta z-group z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-php&quot;&gt;(&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-php&quot;&gt;&lt;span class=&quot;z-meta z-group z-php&quot;&gt;&lt;span class=&quot;z-string z-quoted z-single z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-php&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-string z-quoted z-single z-php&quot;&gt;&lt;span class=&quot;z-meta z-string-contents z-quoted z-single z-php&quot;&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-string z-quoted z-single z-php&quot;&gt;&lt;span class=&quot;z-meta z-string-contents z-quoted z-single z-php&quot;&gt;simpleOperation&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-end z-php&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-php&quot;&gt;&lt;span class=&quot;z-meta z-group z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-php&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
            &lt;span class=&quot;z-meta z-function-call z-method z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-accessor z-arrow z-php&quot;&gt;-&amp;gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-variable z-function z-php&quot;&gt;willReturn&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-php&quot;&gt;&lt;span class=&quot;z-meta z-group z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-php&quot;&gt;(&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-php&quot;&gt;&lt;span class=&quot;z-meta z-group z-php&quot;&gt;&lt;span class=&quot;z-variable z-other z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-variable z-php&quot;&gt;$&lt;&#x2F;span&gt;result&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-php&quot;&gt;&lt;span class=&quot;z-meta z-group z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-php&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-terminator z-expression z-php&quot;&gt;;&lt;&#x2F;span&gt;

        &lt;span class=&quot;z-variable z-other z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-variable z-php&quot;&gt;$&lt;&#x2F;span&gt;operation&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-assignment z-php&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-other z-new z-php&quot;&gt;new&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-path z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-separator z-namespace z-php&quot;&gt;\&lt;&#x2F;span&gt;&lt;span class=&quot;z-support z-class z-builtin z-php&quot;&gt;ReflectionClass&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-php&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-path z-php&quot;&gt;&lt;span class=&quot;z-support z-class z-php&quot;&gt;Operation&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-accessor z-double-colon z-php&quot;&gt;::&lt;&#x2F;span&gt;&lt;span class=&quot;z-constant z-class z-php&quot;&gt;class&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-php&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-terminator z-expression z-php&quot;&gt;;&lt;&#x2F;span&gt;
        &lt;span class=&quot;z-variable z-other z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-variable z-php&quot;&gt;$&lt;&#x2F;span&gt;reflection&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-assignment z-php&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;z-variable z-other z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-variable z-php&quot;&gt;$&lt;&#x2F;span&gt;operation&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-method z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-accessor z-arrow z-php&quot;&gt;-&amp;gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-variable z-function z-php&quot;&gt;invoke&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-php&quot;&gt;&lt;span class=&quot;z-meta z-group z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-php&quot;&gt;(&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-php&quot;&gt;&lt;span class=&quot;z-meta z-group z-php&quot;&gt;&lt;span class=&quot;z-variable z-other z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-variable z-php&quot;&gt;$&lt;&#x2F;span&gt;addition&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-php&quot;&gt;&lt;span class=&quot;z-meta z-group z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-php&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-terminator z-expression z-php&quot;&gt;;&lt;&#x2F;span&gt;

        &lt;span class=&quot;z-variable z-language z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-variable z-php&quot;&gt;$&lt;&#x2F;span&gt;this&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-method z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-accessor z-arrow z-php&quot;&gt;-&amp;gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-variable z-function z-php&quot;&gt;assertSame&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-php&quot;&gt;&lt;span class=&quot;z-meta z-group z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-php&quot;&gt;(&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-php&quot;&gt;&lt;span class=&quot;z-meta z-group z-php&quot;&gt;&lt;span class=&quot;z-variable z-other z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-variable z-php&quot;&gt;$&lt;&#x2F;span&gt;result&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-php&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-variable z-other z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-variable z-php&quot;&gt;$&lt;&#x2F;span&gt;reflection&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-method z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-accessor z-arrow z-php&quot;&gt;-&amp;gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-variable z-function z-php&quot;&gt;addition&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-php&quot;&gt;&lt;span class=&quot;z-meta z-group z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-php&quot;&gt;(&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-php&quot;&gt;&lt;span class=&quot;z-meta z-group z-php&quot;&gt;&lt;span class=&quot;z-meta z-function-call z-php&quot;&gt;&lt;span class=&quot;z-meta z-group z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-php&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-php&quot;&gt;&lt;span class=&quot;z-meta z-group z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-php&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-terminator z-expression z-php&quot;&gt;;&lt;&#x2F;span&gt;
    &lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-php&quot;&gt;&lt;span class=&quot;z-meta z-block z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-end z-php&quot;&gt;}&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-class z-php&quot;&gt;&lt;span class=&quot;z-meta z-block z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-php&quot;&gt;}&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;What would happen if we modified the &lt;code&gt;simpleOperation()&lt;&#x2F;code&gt; method from the Addition class to the following, and we run the
tests?&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;php source&quot; class=&quot;language-php source z-code&quot;&gt;&lt;code class=&quot;language-php source&quot; data-lang=&quot;php source&quot;&gt;&lt;span class=&quot;z-source z-php&quot;&gt;&lt;span class=&quot;z-meta z-class z-php&quot;&gt;&lt;span class=&quot;z-storage z-modifier z-abstract z-php&quot;&gt;final &lt;&#x2F;span&gt;&lt;span class=&quot;z-storage z-type z-class z-php&quot;&gt;class&lt;&#x2F;span&gt; &lt;span class=&quot;z-entity z-name z-class z-php&quot;&gt;Addition&lt;&#x2F;span&gt;
&lt;span class=&quot;z-meta z-block z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-php&quot;&gt;{&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-class z-php&quot;&gt;&lt;span class=&quot;z-meta z-block z-php&quot;&gt;
   &lt;span class=&quot;z-storage z-modifier z-php&quot;&gt;public&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-function z-php&quot;&gt;&lt;span class=&quot;z-storage z-type z-function z-php&quot;&gt;function&lt;&#x2F;span&gt; &lt;span class=&quot;z-entity z-name z-function z-php&quot;&gt;simpleOperation&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-parameters z-php&quot;&gt;&lt;span class=&quot;z-meta z-group z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-php&quot;&gt;(&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-parameters z-php&quot;&gt;&lt;span class=&quot;z-meta z-group z-php&quot;&gt;&lt;span class=&quot;z-storage z-type z-php&quot;&gt;int&lt;&#x2F;span&gt; &lt;span class=&quot;z-variable z-parameter z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-variable z-php&quot;&gt;$&lt;&#x2F;span&gt;number1&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-php&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-storage z-type z-php&quot;&gt;int&lt;&#x2F;span&gt; &lt;span class=&quot;z-variable z-parameter z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-variable z-php&quot;&gt;$&lt;&#x2F;span&gt;number2&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-php&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-return-type z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-separator z-php&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-storage z-type z-php&quot;&gt;int&lt;&#x2F;span&gt;
   &lt;span class=&quot;z-meta z-block z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-begin z-php&quot;&gt;{&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-php&quot;&gt;&lt;span class=&quot;z-meta z-block z-php&quot;&gt;
       &lt;span class=&quot;z-keyword z-control z-php&quot;&gt;return&lt;&#x2F;span&gt; &lt;span class=&quot;z-variable z-other z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-variable z-php&quot;&gt;$&lt;&#x2F;span&gt;number1&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-arithmetic z-php&quot;&gt;-&lt;&#x2F;span&gt; &lt;span class=&quot;z-variable z-other z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-variable z-php&quot;&gt;$&lt;&#x2F;span&gt;number2&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-terminator z-expression z-php&quot;&gt;;&lt;&#x2F;span&gt;
   &lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-php&quot;&gt;&lt;span class=&quot;z-meta z-block z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-end z-php&quot;&gt;}&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-class z-php&quot;&gt;&lt;span class=&quot;z-meta z-block z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-php&quot;&gt;}&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Question&lt;&#x2F;strong&gt;: Will the ‚Äòstandard‚Äô fail? What about the Reflection one?&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;Answer&lt;&#x2F;strong&gt;: The standard will fail because we expect 4 as a result, but we got a 0.
However, the reflection will pass, because we are not focusing on the real implementation, we are creating a false
positive which can be dangerous.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;dealing-with-some-problems-when-not-using-reflection&quot;&gt;Dealing with some problems when not using Reflection&lt;&#x2F;h2&gt;
&lt;p&gt;Let me show you a more realistic example (idea from 
&lt;a href=&quot;https:&#x2F;&#x2F;phptherightway.com&#x2F;pages&#x2F;Design-Patterns.html&quot;&gt;PHPTheRightWay&lt;&#x2F;a&gt;):&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;php source&quot; class=&quot;language-php source z-code&quot;&gt;&lt;code class=&quot;language-php source&quot; data-lang=&quot;php source&quot;&gt;&lt;span class=&quot;z-source z-php&quot;&gt;&lt;span class=&quot;z-storage z-modifier z-php&quot;&gt;final&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-other z-php&quot;&gt;readonly&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-class z-php&quot;&gt;&lt;span class=&quot;z-storage z-type z-class z-php&quot;&gt;class&lt;&#x2F;span&gt; &lt;span class=&quot;z-entity z-name z-class z-php&quot;&gt;Vehicle&lt;&#x2F;span&gt;
&lt;span class=&quot;z-meta z-block z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-php&quot;&gt;{&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-class z-php&quot;&gt;&lt;span class=&quot;z-meta z-block z-php&quot;&gt;
    &lt;span class=&quot;z-storage z-modifier z-php&quot;&gt;public&lt;&#x2F;span&gt; &lt;span class=&quot;z-support z-class z-php&quot;&gt;string&lt;&#x2F;span&gt; &lt;span class=&quot;z-variable z-other z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-variable z-php&quot;&gt;$&lt;&#x2F;span&gt;model&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-terminator z-expression z-php&quot;&gt;;&lt;&#x2F;span&gt;
    &lt;span class=&quot;z-storage z-modifier z-php&quot;&gt;public&lt;&#x2F;span&gt; &lt;span class=&quot;z-support z-class z-php&quot;&gt;int&lt;&#x2F;span&gt; &lt;span class=&quot;z-variable z-other z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-variable z-php&quot;&gt;$&lt;&#x2F;span&gt;price&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-terminator z-expression z-php&quot;&gt;;&lt;&#x2F;span&gt;

    &lt;span class=&quot;z-storage z-modifier z-php&quot;&gt;public&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-function z-php&quot;&gt;&lt;span class=&quot;z-storage z-type z-function z-php&quot;&gt;function&lt;&#x2F;span&gt; &lt;span class=&quot;z-entity z-name z-function z-php&quot;&gt;&lt;span class=&quot;z-support z-function z-magic z-php&quot;&gt;__construct&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-parameters z-php&quot;&gt;&lt;span class=&quot;z-meta z-group z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-php&quot;&gt;(&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-parameters z-php&quot;&gt;&lt;span class=&quot;z-meta z-group z-php&quot;&gt;&lt;span class=&quot;z-storage z-type z-php&quot;&gt;string&lt;&#x2F;span&gt; &lt;span class=&quot;z-variable z-parameter z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-variable z-php&quot;&gt;$&lt;&#x2F;span&gt;model&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-php&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-php&quot;&gt;
    &lt;span class=&quot;z-meta z-block z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-begin z-php&quot;&gt;{&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-php&quot;&gt;&lt;span class=&quot;z-meta z-block z-php&quot;&gt;
        &lt;span class=&quot;z-variable z-language z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-variable z-php&quot;&gt;$&lt;&#x2F;span&gt;this&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-accessor z-arrow z-php&quot;&gt;-&amp;gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-variable z-other z-member z-php&quot;&gt;model&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-assignment z-php&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;z-variable z-other z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-variable z-php&quot;&gt;$&lt;&#x2F;span&gt;model&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-terminator z-expression z-php&quot;&gt;;&lt;&#x2F;span&gt;
        &lt;span class=&quot;z-variable z-language z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-variable z-php&quot;&gt;$&lt;&#x2F;span&gt;this&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-accessor z-arrow z-php&quot;&gt;-&amp;gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-variable z-other z-member z-php&quot;&gt;price&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-assignment z-php&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-function-call z-php&quot;&gt;&lt;span class=&quot;z-support z-function z-csprng z-php&quot;&gt;random_int&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-php&quot;&gt;&lt;span class=&quot;z-meta z-group z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-php&quot;&gt;(&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-php&quot;&gt;&lt;span class=&quot;z-meta z-group z-php&quot;&gt;&lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-php&quot;&gt;1000&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-php&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-php&quot;&gt;3000&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-php&quot;&gt;&lt;span class=&quot;z-meta z-group z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-php&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-terminator z-expression z-php&quot;&gt;;&lt;&#x2F;span&gt;
    &lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-php&quot;&gt;&lt;span class=&quot;z-meta z-block z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-end z-php&quot;&gt;}&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-class z-php&quot;&gt;&lt;span class=&quot;z-meta z-block z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-php&quot;&gt;}&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;To test the vehicle‚Äôs model is easy, but what about the price?&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;php source&quot; class=&quot;language-php source z-code&quot;&gt;&lt;code class=&quot;language-php source&quot; data-lang=&quot;php source&quot;&gt;&lt;span class=&quot;z-source z-php&quot;&gt;&lt;span class=&quot;z-meta z-function z-php&quot;&gt;&lt;span class=&quot;z-storage z-modifier z-php&quot;&gt;public&lt;&#x2F;span&gt; &lt;span class=&quot;z-storage z-type z-function z-php&quot;&gt;function&lt;&#x2F;span&gt; &lt;span class=&quot;z-entity z-name z-function z-php&quot;&gt;testModel&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-parameters z-php&quot;&gt;&lt;span class=&quot;z-meta z-group z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-php&quot;&gt;(&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-parameters z-php&quot;&gt;&lt;span class=&quot;z-meta z-group z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-php&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-return-type z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-separator z-php&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-path z-php&quot;&gt;&lt;span class=&quot;z-support z-class z-php&quot;&gt;void&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;span class=&quot;z-meta z-block z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-begin z-php&quot;&gt;{&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-php&quot;&gt;&lt;span class=&quot;z-meta z-block z-php&quot;&gt;
    &lt;span class=&quot;z-variable z-other z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-variable z-php&quot;&gt;$&lt;&#x2F;span&gt;model&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-assignment z-php&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-quoted z-single z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-php&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-string z-quoted z-single z-php&quot;&gt;&lt;span class=&quot;z-meta z-string-contents z-quoted z-single z-php&quot;&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-string z-quoted z-single z-php&quot;&gt;&lt;span class=&quot;z-meta z-string-contents z-quoted z-single z-php&quot;&gt;Seat&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-end z-php&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-terminator z-expression z-php&quot;&gt;;&lt;&#x2F;span&gt;
    &lt;span class=&quot;z-variable z-other z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-variable z-php&quot;&gt;$&lt;&#x2F;span&gt;vehicle&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-assignment z-php&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-other z-new z-php&quot;&gt;new&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-path z-php&quot;&gt;&lt;span class=&quot;z-support z-class z-php&quot;&gt;Vehicle&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-php&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-variable z-other z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-variable z-php&quot;&gt;$&lt;&#x2F;span&gt;model&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-php&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-terminator z-expression z-php&quot;&gt;;&lt;&#x2F;span&gt;

    &lt;span class=&quot;z-variable z-language z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-variable z-php&quot;&gt;$&lt;&#x2F;span&gt;this&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-method z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-accessor z-arrow z-php&quot;&gt;-&amp;gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-variable z-function z-php&quot;&gt;assertSame&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-php&quot;&gt;&lt;span class=&quot;z-meta z-group z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-php&quot;&gt;(&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-php&quot;&gt;&lt;span class=&quot;z-meta z-group z-php&quot;&gt;&lt;span class=&quot;z-variable z-other z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-variable z-php&quot;&gt;$&lt;&#x2F;span&gt;model&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-php&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-variable z-other z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-variable z-php&quot;&gt;$&lt;&#x2F;span&gt;vehicle&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-method z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-accessor z-arrow z-php&quot;&gt;-&amp;gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-variable z-function z-php&quot;&gt;model&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-php&quot;&gt;&lt;span class=&quot;z-meta z-group z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-php&quot;&gt;(&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-php&quot;&gt;&lt;span class=&quot;z-meta z-group z-php&quot;&gt;&lt;span class=&quot;z-meta z-function-call z-php&quot;&gt;&lt;span class=&quot;z-meta z-group z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-php&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-php&quot;&gt;&lt;span class=&quot;z-meta z-group z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-php&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-terminator z-expression z-php&quot;&gt;;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-php&quot;&gt;&lt;span class=&quot;z-meta z-block z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-end z-php&quot;&gt;}&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;

&lt;span class=&quot;z-meta z-function z-php&quot;&gt;&lt;span class=&quot;z-storage z-modifier z-php&quot;&gt;public&lt;&#x2F;span&gt; &lt;span class=&quot;z-storage z-type z-function z-php&quot;&gt;function&lt;&#x2F;span&gt; &lt;span class=&quot;z-entity z-name z-function z-php&quot;&gt;testPrice&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-parameters z-php&quot;&gt;&lt;span class=&quot;z-meta z-group z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-php&quot;&gt;(&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-parameters z-php&quot;&gt;&lt;span class=&quot;z-meta z-group z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-php&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-return-type z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-separator z-php&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-path z-php&quot;&gt;&lt;span class=&quot;z-support z-class z-php&quot;&gt;void&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;span class=&quot;z-meta z-block z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-begin z-php&quot;&gt;{&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-php&quot;&gt;&lt;span class=&quot;z-meta z-block z-php&quot;&gt;
    &lt;span class=&quot;z-variable z-other z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-variable z-php&quot;&gt;$&lt;&#x2F;span&gt;model&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-assignment z-php&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-quoted z-single z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-php&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-string z-quoted z-single z-php&quot;&gt;&lt;span class=&quot;z-meta z-string-contents z-quoted z-single z-php&quot;&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-string z-quoted z-single z-php&quot;&gt;&lt;span class=&quot;z-meta z-string-contents z-quoted z-single z-php&quot;&gt;Seat&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-end z-php&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-terminator z-expression z-php&quot;&gt;;&lt;&#x2F;span&gt;
    &lt;span class=&quot;z-variable z-other z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-variable z-php&quot;&gt;$&lt;&#x2F;span&gt;vehicle&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-assignment z-php&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-other z-new z-php&quot;&gt;new&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-path z-php&quot;&gt;&lt;span class=&quot;z-support z-class z-php&quot;&gt;Vehicle&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-php&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-variable z-other z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-variable z-php&quot;&gt;$&lt;&#x2F;span&gt;model&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-php&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-terminator z-expression z-php&quot;&gt;;&lt;&#x2F;span&gt;

    &lt;span class=&quot;z-variable z-language z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-variable z-php&quot;&gt;$&lt;&#x2F;span&gt;this&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-method z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-accessor z-arrow z-php&quot;&gt;-&amp;gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-variable z-function z-php&quot;&gt;assertSame&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-php&quot;&gt;&lt;span class=&quot;z-meta z-group z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-php&quot;&gt;(&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-php&quot;&gt;&lt;span class=&quot;z-meta z-group z-php&quot;&gt; ¬ø¬ø?? &lt;span class=&quot;z-punctuation z-separator z-php&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-variable z-other z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-variable z-php&quot;&gt;$&lt;&#x2F;span&gt;vehicle&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-method z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-accessor z-arrow z-php&quot;&gt;-&amp;gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-variable z-function z-php&quot;&gt;price&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-php&quot;&gt;&lt;span class=&quot;z-meta z-group z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-php&quot;&gt;(&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-php&quot;&gt;&lt;span class=&quot;z-meta z-group z-php&quot;&gt;&lt;span class=&quot;z-meta z-function-call z-php&quot;&gt;&lt;span class=&quot;z-meta z-group z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-php&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-php&quot;&gt;&lt;span class=&quot;z-meta z-group z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-php&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-terminator z-expression z-php&quot;&gt;;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-php&quot;&gt;&lt;span class=&quot;z-meta z-block z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-end z-php&quot;&gt;}&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;One possible solution could be using the Reflection class to be able to set explicitly the price like:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;php source&quot; class=&quot;language-php source z-code&quot;&gt;&lt;code class=&quot;language-php source&quot; data-lang=&quot;php source&quot;&gt;&lt;span class=&quot;z-source z-php&quot;&gt;&lt;span class=&quot;z-meta z-function z-php&quot;&gt;&lt;span class=&quot;z-storage z-modifier z-php&quot;&gt;public&lt;&#x2F;span&gt; &lt;span class=&quot;z-storage z-type z-function z-php&quot;&gt;function&lt;&#x2F;span&gt; &lt;span class=&quot;z-entity z-name z-function z-php&quot;&gt;testGetPrice&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-parameters z-php&quot;&gt;&lt;span class=&quot;z-meta z-group z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-php&quot;&gt;(&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-parameters z-php&quot;&gt;&lt;span class=&quot;z-meta z-group z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-php&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-return-type z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-separator z-php&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-path z-php&quot;&gt;&lt;span class=&quot;z-support z-class z-php&quot;&gt;void&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;span class=&quot;z-meta z-block z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-begin z-php&quot;&gt;{&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-php&quot;&gt;&lt;span class=&quot;z-meta z-block z-php&quot;&gt;
     &lt;span class=&quot;z-comment z-block z-documentation z-phpdoc z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-comment z-begin z-php&quot;&gt;&#x2F;**&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-other z-phpdoc z-php&quot;&gt;@var&lt;&#x2F;span&gt; Vehicle|MockObject $vehicle &lt;span class=&quot;z-punctuation z-definition z-comment z-end z-php&quot;&gt;*&#x2F;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
     &lt;span class=&quot;z-variable z-other z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-variable z-php&quot;&gt;$&lt;&#x2F;span&gt;vehicle&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-assignment z-php&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;z-variable z-language z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-variable z-php&quot;&gt;$&lt;&#x2F;span&gt;this&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-method z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-accessor z-arrow z-php&quot;&gt;-&amp;gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-variable z-function z-php&quot;&gt;createPartialMock&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-php&quot;&gt;&lt;span class=&quot;z-meta z-group z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-php&quot;&gt;(&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-php&quot;&gt;&lt;span class=&quot;z-meta z-group z-php&quot;&gt;&lt;span class=&quot;z-meta z-path z-php&quot;&gt;&lt;span class=&quot;z-support z-class z-php&quot;&gt;Vehicle&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-accessor z-double-colon z-php&quot;&gt;::&lt;&#x2F;span&gt;&lt;span class=&quot;z-constant z-class z-php&quot;&gt;class&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-php&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-array z-empty z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-array z-begin z-php&quot;&gt;[&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-array z-end z-php&quot;&gt;]&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-php&quot;&gt;&lt;span class=&quot;z-meta z-group z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-php&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-terminator z-expression z-php&quot;&gt;;&lt;&#x2F;span&gt;

     &lt;span class=&quot;z-variable z-other z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-variable z-php&quot;&gt;$&lt;&#x2F;span&gt;reflection&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-assignment z-php&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-other z-new z-php&quot;&gt;new&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-path z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-separator z-namespace z-php&quot;&gt;\&lt;&#x2F;span&gt;&lt;span class=&quot;z-support z-class z-builtin z-php&quot;&gt;ReflectionProperty&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-php&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-path z-php&quot;&gt;&lt;span class=&quot;z-support z-class z-php&quot;&gt;Vehicle&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-accessor z-double-colon z-php&quot;&gt;::&lt;&#x2F;span&gt;&lt;span class=&quot;z-constant z-class z-php&quot;&gt;class&lt;&#x2F;span&gt;, &lt;span class=&quot;z-string z-quoted z-single z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-php&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-string z-quoted z-single z-php&quot;&gt;&lt;span class=&quot;z-meta z-string-contents z-quoted z-single z-php&quot;&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-string z-quoted z-single z-php&quot;&gt;&lt;span class=&quot;z-meta z-string-contents z-quoted z-single z-php&quot;&gt;price&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-end z-php&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-php&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-terminator z-expression z-php&quot;&gt;;&lt;&#x2F;span&gt;
     &lt;span class=&quot;z-variable z-other z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-variable z-php&quot;&gt;$&lt;&#x2F;span&gt;reflection&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-method z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-accessor z-arrow z-php&quot;&gt;-&amp;gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-variable z-function z-php&quot;&gt;setAccessible&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-php&quot;&gt;&lt;span class=&quot;z-meta z-group z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-php&quot;&gt;(&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-php&quot;&gt;&lt;span class=&quot;z-meta z-group z-php&quot;&gt;&lt;span class=&quot;z-constant z-language z-php&quot;&gt;true&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-php&quot;&gt;&lt;span class=&quot;z-meta z-group z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-php&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-terminator z-expression z-php&quot;&gt;;&lt;&#x2F;span&gt;
     &lt;span class=&quot;z-variable z-other z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-variable z-php&quot;&gt;$&lt;&#x2F;span&gt;price&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-assignment z-php&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-php&quot;&gt;200&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-terminator z-expression z-php&quot;&gt;;&lt;&#x2F;span&gt;
     &lt;span class=&quot;z-variable z-other z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-variable z-php&quot;&gt;$&lt;&#x2F;span&gt;reflection&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-method z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-accessor z-arrow z-php&quot;&gt;-&amp;gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-variable z-function z-php&quot;&gt;setValue&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-php&quot;&gt;&lt;span class=&quot;z-meta z-group z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-php&quot;&gt;(&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-php&quot;&gt;&lt;span class=&quot;z-meta z-group z-php&quot;&gt;&lt;span class=&quot;z-variable z-other z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-variable z-php&quot;&gt;$&lt;&#x2F;span&gt;vehicle&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-php&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-variable z-other z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-variable z-php&quot;&gt;$&lt;&#x2F;span&gt;price&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-php&quot;&gt;&lt;span class=&quot;z-meta z-group z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-php&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-terminator z-expression z-php&quot;&gt;;&lt;&#x2F;span&gt;

     &lt;span class=&quot;z-variable z-language z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-variable z-php&quot;&gt;$&lt;&#x2F;span&gt;this&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-method z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-accessor z-arrow z-php&quot;&gt;-&amp;gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-variable z-function z-php&quot;&gt;assertSame&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-php&quot;&gt;&lt;span class=&quot;z-meta z-group z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-php&quot;&gt;(&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-php&quot;&gt;&lt;span class=&quot;z-meta z-group z-php&quot;&gt;&lt;span class=&quot;z-variable z-other z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-variable z-php&quot;&gt;$&lt;&#x2F;span&gt;price&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-php&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-variable z-other z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-variable z-php&quot;&gt;$&lt;&#x2F;span&gt;vehicle&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-method z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-accessor z-arrow z-php&quot;&gt;-&amp;gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-variable z-function z-php&quot;&gt;price&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-php&quot;&gt;&lt;span class=&quot;z-meta z-group z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-php&quot;&gt;(&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-php&quot;&gt;&lt;span class=&quot;z-meta z-group z-php&quot;&gt;&lt;span class=&quot;z-meta z-function-call z-php&quot;&gt;&lt;span class=&quot;z-meta z-group z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-php&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-php&quot;&gt;&lt;span class=&quot;z-meta z-group z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-php&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-terminator z-expression z-php&quot;&gt;;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-php&quot;&gt;&lt;span class=&quot;z-meta z-block z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-end z-php&quot;&gt;}&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;But our Vehicle class is final, so we cannot perform this test, also, we said we shouldn‚Äôt use the Reflection class, so,
probably we are doing something wrong in this class (TIP: you should make &lt;strong&gt;final&lt;&#x2F;strong&gt; your classes by default üòâ).&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Question&lt;&#x2F;strong&gt;: So what is the problem here?&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;Answer&lt;&#x2F;strong&gt;: The problem here is that we are performing an action inside the class (on the constructor) to which we do not
have access from the outside.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;One solution could be to inject the value in the constructor like:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;php source&quot; class=&quot;language-php source z-code&quot;&gt;&lt;code class=&quot;language-php source&quot; data-lang=&quot;php source&quot;&gt;&lt;span class=&quot;z-source z-php&quot;&gt;&lt;span class=&quot;z-storage z-modifier z-php&quot;&gt;final&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-other z-php&quot;&gt;readonly&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-class z-php&quot;&gt;&lt;span class=&quot;z-storage z-type z-class z-php&quot;&gt;class&lt;&#x2F;span&gt; &lt;span class=&quot;z-entity z-name z-class z-php&quot;&gt;Vehicle&lt;&#x2F;span&gt;
&lt;span class=&quot;z-meta z-block z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-php&quot;&gt;{&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-class z-php&quot;&gt;&lt;span class=&quot;z-meta z-block z-php&quot;&gt;
    &lt;span class=&quot;z-storage z-modifier z-php&quot;&gt;public&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-function z-php&quot;&gt;&lt;span class=&quot;z-storage z-type z-function z-php&quot;&gt;function&lt;&#x2F;span&gt; &lt;span class=&quot;z-entity z-name z-function z-php&quot;&gt;&lt;span class=&quot;z-support z-function z-magic z-php&quot;&gt;__construct&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-parameters z-php&quot;&gt;&lt;span class=&quot;z-meta z-group z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-php&quot;&gt;(&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-parameters z-php&quot;&gt;&lt;span class=&quot;z-meta z-group z-php&quot;&gt;
        &lt;span class=&quot;z-meta z-path z-php&quot;&gt;&lt;span class=&quot;z-support z-class z-php&quot;&gt;public&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-storage z-type z-php&quot;&gt;string&lt;&#x2F;span&gt; &lt;span class=&quot;z-variable z-parameter z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-variable z-php&quot;&gt;$&lt;&#x2F;span&gt;model&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-php&quot;&gt;,&lt;&#x2F;span&gt;
        &lt;span class=&quot;z-meta z-path z-php&quot;&gt;&lt;span class=&quot;z-support z-class z-php&quot;&gt;public&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-storage z-type z-php&quot;&gt;int&lt;&#x2F;span&gt; &lt;span class=&quot;z-variable z-parameter z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-variable z-php&quot;&gt;$&lt;&#x2F;span&gt;price&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-php&quot;&gt;,&lt;&#x2F;span&gt;
    &lt;span class=&quot;z-punctuation z-section z-group z-end z-php&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-php&quot;&gt; &lt;span class=&quot;z-meta z-block z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-begin z-php&quot;&gt;{&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-php&quot;&gt;&lt;span class=&quot;z-meta z-block z-php&quot;&gt;
    &lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-php&quot;&gt;&lt;span class=&quot;z-meta z-block z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-end z-php&quot;&gt;}&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-class z-php&quot;&gt;&lt;span class=&quot;z-meta z-block z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-php&quot;&gt;}&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;And when we want to create this class, we could pass the final price as:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;php source&quot; class=&quot;language-php source z-code&quot;&gt;&lt;code class=&quot;language-php source&quot; data-lang=&quot;php source&quot;&gt;&lt;span class=&quot;z-source z-php&quot;&gt;&lt;span class=&quot;z-variable z-other z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-variable z-php&quot;&gt;$&lt;&#x2F;span&gt;vehiclePrice&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-assignment z-php&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-function-call z-php&quot;&gt;&lt;span class=&quot;z-support z-function z-csprng z-php&quot;&gt;random_int&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-php&quot;&gt;&lt;span class=&quot;z-meta z-group z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-php&quot;&gt;(&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-php&quot;&gt;&lt;span class=&quot;z-meta z-group z-php&quot;&gt;&lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-php&quot;&gt;1000&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-php&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-php&quot;&gt;3000&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-php&quot;&gt;&lt;span class=&quot;z-meta z-group z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-php&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-terminator z-expression z-php&quot;&gt;;&lt;&#x2F;span&gt;
&lt;span class=&quot;z-variable z-other z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-variable z-php&quot;&gt;$&lt;&#x2F;span&gt;vehicle&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-assignment z-php&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-other z-new z-php&quot;&gt;new&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-path z-php&quot;&gt;&lt;span class=&quot;z-support z-class z-php&quot;&gt;Vehicle&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-php&quot;&gt;(&lt;&#x2F;span&gt;‚Äò&lt;span class=&quot;z-constant z-other z-php&quot;&gt;Seat&lt;&#x2F;span&gt;‚Äô, &lt;span class=&quot;z-variable z-other z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-variable z-php&quot;&gt;$&lt;&#x2F;span&gt;vehiclePrice&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-php&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-terminator z-expression z-php&quot;&gt;;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;So, our price test could be like:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;php source&quot; class=&quot;language-php source z-code&quot;&gt;&lt;code class=&quot;language-php source&quot; data-lang=&quot;php source&quot;&gt;&lt;span class=&quot;z-source z-php&quot;&gt;&lt;span class=&quot;z-meta z-function z-php&quot;&gt;&lt;span class=&quot;z-storage z-modifier z-php&quot;&gt;public&lt;&#x2F;span&gt; &lt;span class=&quot;z-storage z-type z-function z-php&quot;&gt;function&lt;&#x2F;span&gt; &lt;span class=&quot;z-entity z-name z-function z-php&quot;&gt;testPrice&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-parameters z-php&quot;&gt;&lt;span class=&quot;z-meta z-group z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-php&quot;&gt;(&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-parameters z-php&quot;&gt;&lt;span class=&quot;z-meta z-group z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-php&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-return-type z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-separator z-php&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-path z-php&quot;&gt;&lt;span class=&quot;z-support z-class z-php&quot;&gt;void&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;span class=&quot;z-meta z-block z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-begin z-php&quot;&gt;{&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-php&quot;&gt;&lt;span class=&quot;z-meta z-block z-php&quot;&gt;
    &lt;span class=&quot;z-variable z-other z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-variable z-php&quot;&gt;$&lt;&#x2F;span&gt;price&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-assignment z-php&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-php&quot;&gt;200&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-terminator z-expression z-php&quot;&gt;;&lt;&#x2F;span&gt;
    &lt;span class=&quot;z-variable z-other z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-variable z-php&quot;&gt;$&lt;&#x2F;span&gt;vehicle&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-assignment z-php&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-other z-new z-php&quot;&gt;new&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-path z-php&quot;&gt;&lt;span class=&quot;z-support z-class z-php&quot;&gt;Vehicle&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-php&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-string z-quoted z-single z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-php&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-string z-quoted z-single z-php&quot;&gt;&lt;span class=&quot;z-meta z-string-contents z-quoted z-single z-php&quot;&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-string z-quoted z-single z-php&quot;&gt;&lt;span class=&quot;z-meta z-string-contents z-quoted z-single z-php&quot;&gt;foo&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-end z-php&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;, &lt;span class=&quot;z-variable z-other z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-variable z-php&quot;&gt;$&lt;&#x2F;span&gt;price&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-php&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-terminator z-expression z-php&quot;&gt;;&lt;&#x2F;span&gt;

    &lt;span class=&quot;z-variable z-language z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-variable z-php&quot;&gt;$&lt;&#x2F;span&gt;this&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-method z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-accessor z-arrow z-php&quot;&gt;-&amp;gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-variable z-function z-php&quot;&gt;assertSame&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-php&quot;&gt;&lt;span class=&quot;z-meta z-group z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-php&quot;&gt;(&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-php&quot;&gt;&lt;span class=&quot;z-meta z-group z-php&quot;&gt;&lt;span class=&quot;z-variable z-other z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-variable z-php&quot;&gt;$&lt;&#x2F;span&gt;price&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-php&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-variable z-other z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-variable z-php&quot;&gt;$&lt;&#x2F;span&gt;vehicle&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-method z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-accessor z-arrow z-php&quot;&gt;-&amp;gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-variable z-function z-php&quot;&gt;price&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-php&quot;&gt;&lt;span class=&quot;z-meta z-group z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-php&quot;&gt;(&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-php&quot;&gt;&lt;span class=&quot;z-meta z-group z-php&quot;&gt;&lt;span class=&quot;z-meta z-function-call z-php&quot;&gt;&lt;span class=&quot;z-meta z-group z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-php&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-php&quot;&gt;&lt;span class=&quot;z-meta z-group z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-php&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-terminator z-expression z-php&quot;&gt;;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-php&quot;&gt;&lt;span class=&quot;z-meta z-block z-php&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-end z-php&quot;&gt;}&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;To sum up, I don‚Äôt recommend using the Reflection class anywhere in your code unless you are very aware of what you are
doing, usually, there are alternative implementations to what you want to achieve without using it.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;images&#x2F;2020-04-03&#x2F;2.png&quot; alt=&quot;stone-figures&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Additionally, defining our classes as &lt;code&gt;final&lt;&#x2F;code&gt; helps us to have a better design, not only because it forbid us the use of
Reflection, but also it prevents us from mocking our business logic, which is good.&lt;&#x2F;p&gt;
</content>
	</entry>
</feed>
